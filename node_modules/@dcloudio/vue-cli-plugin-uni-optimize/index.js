const path = require('path')

const webpack = require('webpack')

const WebpackOptimizePlugin = require('./packages/webpack-optimize-plugin')

const { src, lib } = require('@dcloudio/uni-h5/path')

const resolve = dir => path.resolve(__dirname, './', dir)

module.exports = (api, options) => {
  if(!process.env.UNI_OPT_COMPONENT){
    return
  }
  if (process.env.NODE_ENV !== 'production' || process.env.UNI_PLATFORM !== 'h5') {
    return
  }

  options.transpileDependencies = [/vue-cli-plugin-uni-optimize/, /@dcloudio\/uni-h5/]

  api.configureWebpack(webpackConfig => {
    return {
      watch: true,
      resolve: {
        alias: {
          ['uni-' + process.env.UNI_PLATFORM]: path.join(lib, `${process.env.UNI_PLATFORM}/main.js`),
          'uni-core': path.join(src, 'core'),
          'uni-view': path.join(src, 'core/view'),
          'uni-service': path.join(src, 'core/service'),
          'uni-shared': path.join(src, 'shared'),
          'uni-mixins': path.join(src, 'core/view/mixins'),
          'uni-helpers': path.join(src, 'core/helpers'),
          'uni-platform': path.join(src, 'platforms/' + process.env.UNI_PLATFORM),
          'uni-components': resolve('.tmp/components.js')
        }
      },
      plugins: [
        new WebpackOptimizePlugin(),
        new webpack.DefinePlugin({
          __VERSION__: JSON.stringify(require('@dcloudio/uni-' + process.env.UNI_PLATFORM + '/package.json').version),
          __PLATFORM__: JSON.stringify(process.env.UNI_PLATFORM)
        }),
        new webpack.ProvidePlugin({
          'console': [path.join(src, 'core/helpers/console'), 'default'],
          'UniViewJSBridge': [path.join(src, 'core/view/bridge')],
          'UniServiceJSBridge': [path.join(src, 'core/service/bridge')]
        })
      ]
    }
  })

  api.chainWebpack(webpackConfig => {
    // Vue
    webpackConfig.module
      .rule('vue')
      .use('vue-loader')
      .loader(resolve('packages/vue-loader'))
      .tap(options => Object.assign(options, {
        cacheDirectory: false,
        cacheIdentifier: false,
        compilerOptions: require('@dcloudio/vue-cli-plugin-uni/lib/h5/compiler-options')
      }))
      .end()
      .uses
      .delete('cache-loader')
  })
}

module.exports.defaultModes = {
  'build': 'production',
  'uni-build': 'production'
}
