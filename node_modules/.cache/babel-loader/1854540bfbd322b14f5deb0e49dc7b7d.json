{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-2!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--18-0!/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/pages/ucenter/orderList/orderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/pages/ucenter/orderList/orderList.vue","mtime":1562072823377},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1561751947145}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"/Users/lee/Desktop/github/mall-project/node_modules/@babel/runtime/regenerator\"));\n\nvar _util = require(\"@/common/utils/util\");\n\nvar _api = require(\"@/common/config/api\");\n\nvar _mescrollBeibei = _interopRequireDefault(require(\"@/components/mescroll-diy/mescroll-beibei.vue\"));\n\nvar _mediaList = _interopRequireDefault(require(\"@/components/tab-nvue/mediaList.vue\"));\n\nvar _pdList = _interopRequireDefault(require(\"@/components/other/pd-list.vue\"));\n\nvar _pdlist = _interopRequireDefault(require(\"@/common/pdlist.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  components: {\n    MescrollUni: _mescrollBeibei.default,\n    mediaList: _mediaList.default,\n    PdList: _pdList.default\n  },\n  data: function data() {\n    return {\n      scrollLeft: 0,\n      isClickChange: false,\n      current: 0,\n      orderList: [],\n      // 订单列表\n      tabBars: [{\n        name: \"全部\",\n        id: \"0\",\n        status: \"\"\n      }, {\n        name: \"待付款\",\n        id: \"1\",\n        status: \"1\"\n      }, {\n        name: \"待发货\",\n        id: \"2\",\n        status: \"2\"\n      }, {\n        name: \"待收货\",\n        id: \"3\",\n        status: \"3\"\n      }, {\n        name: \"待晒单\",\n        id: \"4\",\n        status: \"4\"\n      }],\n      pdList: [] // 数据列表\n\n    };\n  },\n  onLoad: function onLoad(options) {\n    console.log(options);\n    var status = options.status;\n    this.current = status;\n  },\n  methods: {\n    /*下拉刷新的回调 */\n    downCallback: function downCallback(mescroll) {\n      // 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\n      mescroll.resetUpScroll();\n    },\n\n    /*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\n    upCallback: function upCallback(mescroll) {\n      var _this = this;\n\n      //联网加载数据\n      this.getListDataFromNet(mescroll.num, mescroll.size, function (curPageData) {\n        //联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n        console.log(\"mescroll.num=\" + mescroll.num + \", mescroll.size=\" + mescroll.size + \", curPageData.length=\" + curPageData.length);\n        mescroll.endSuccess(curPageData.length); //设置列表数据\n\n        if (mescroll.num == 1) _this.orderList = []; //如果是第一页需手动制空列表\n\n        _this.orderList = _this.orderList.concat(curPageData); //追加新数据\n      }, function () {\n        //联网失败的回调,隐藏下拉刷新的状态\n        mescroll.endErr();\n      });\n    },\n\n    /*联网加载列表数据\n    实际项目以您服务器接口返回的数据为准,无需本地处理分页.\n    * */\n    getListDataFromNet: function () {\n      var _getListDataFromNet = _asyncToGenerator(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(pageNum, pageSize, successCallback, errorCallback) {\n        var orderList;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(pageNum, pageSize);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.getOrderList(pageNum, pageSize);\n\n              case 4:\n                orderList = _context.sent;\n                this.orderList = orderList;\n                console.log('data', this.orderList); //联网成功的回调\n\n                successCallback && successCallback(orderList);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                //联网失败的回调\n                errorCallback && errorCallback();\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      function getListDataFromNet(_x, _x2, _x3, _x4) {\n        return _getListDataFromNet.apply(this, arguments);\n      }\n\n      return getListDataFromNet;\n    }(),\n    getOrderList: function getOrderList(pageNum, pageSize) {\n      return new Promise(function (sesolve, reject) {\n        var data = {\n          OrderStatus: 2,\n          PageID: pageNum,\n          PageSize: pageSize\n        };\n        (0, _util.request)(_api.OrderListGet, data).then(function (res) {\n          console.log(res);\n          sesolve(res.OrderList);\n        });\n      });\n    },\n    goDetail: function goDetail(e) {\n      console.log(e);\n      uni.navigateTo({\n        url: \"../orderDetail/orderDetail?id=\" + e.OrderID\n      });\n    },\n    changeTab: function () {\n      var _changeTab = _asyncToGenerator(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(e) {\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(e);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function changeTab(_x5) {\n        return _changeTab.apply(this, arguments);\n      }\n\n      return changeTab;\n    }(),\n    tapTab: function () {\n      var _tapTab = _asyncToGenerator(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3(e) {\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //点击tab-bar\n                console.log(e);\n                this.current = e.target.dataset.current;\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function tapTab(_x6) {\n        return _tapTab.apply(this, arguments);\n      }\n\n      return tapTab;\n    }(),\n    randomfn: function randomfn() {\n      var ary = [];\n\n      for (var i = 0, length = this.tabBars.length; i < length; i++) {\n        var aryItem = {\n          loadingText: \"加载更多...\",\n          data: []\n        };\n        ary.push(aryItem);\n      }\n\n      return ary;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["orderList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<view>\n\t\t<scroll-view id=\"tab-bar\" class=\"i-swiper-tab\" scroll-x :scroll-left=\"scrollLeft\">\n\t\t\t<view\n\t\t\t\tv-for=\"(tab, index) in tabBars\"\n\t\t\t\t:key=\"index\"\n\t\t\t\tclass=\"swiper-tab-list\"\n\t\t\t\t:class=\"current==tab.status ? 'active' : ''\"\n\t\t\t\t:id=\"tab.id\"\n\t\t\t\t:data-current=\"tab.status\"\n\t\t\t\t@click=\"tapTab\"\n\t\t\t>{{tab.name}}</view>\n\t\t</scroll-view>\n\t\t<mescroll-uni top=\"98\" @down=\"downCallback\" @up=\"upCallback\">\n\t\t\t<block v-for=\"(item, index) in orderList\" :key=\"index\">\n\t\t\t\t<media-list :options=\"item\" @click=\"goDetail(item)\"></media-list>\n\t\t\t</block>\n\t\t</mescroll-uni>\n\t</view>\n</template>\n\n<script>\n\timport { request, navigateTo } from \"@/common/utils/util\";\n\timport { OrderListGet } from \"@/common/config/api\";\n\t// 自定义的mescroll-beibei.vue\n\timport MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\n\timport mediaList from \"@/components/tab-nvue/mediaList.vue\";\n\timport PdList from \"@/components/other/pd-list.vue\";\n\t// 模拟数据\n\timport mockData from \"@/common/pdlist.js\";\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tMescrollUni,\n\t\t\tmediaList,\n\t\t\tPdList\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tscrollLeft: 0,\n\t\t\t\tisClickChange: false,\n\t\t\t\tcurrent: 0,\n\t\t\t\torderList: [], // 订单列表\n\t\t\t\ttabBars: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"全部\",\n\t\t\t\t\t\tid: \"0\",\n\t\t\t\t\t\tstatus: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待付款\",\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\tstatus: \"1\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待发货\",\n\t\t\t\t\t\tid: \"2\",\n\t\t\t\t\t\tstatus: \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待收货\",\n\t\t\t\t\t\tid: \"3\",\n\t\t\t\t\t\tstatus: \"3\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待晒单\",\n\t\t\t\t\t\tid: \"4\",\n\t\t\t\t\t\tstatus: \"4\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tpdList: [] // 数据列表\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\tconsole.log(options);\n\t\t\tlet status = options.status;\n\t\t\tthis.current = status;\n\t\t},\n\t\tmethods: {\n\t\t\t/*下拉刷新的回调 */\n\t\t\tdownCallback(mescroll) {\n\t\t\t\t// 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\n\t\t\t\tmescroll.resetUpScroll()\n\t\t\t},\n\t\t\t/*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\n\t\t\tupCallback(mescroll) {\n\t\t\t\t//联网加载数据\n\t\t\t\tthis.getListDataFromNet(mescroll.num, mescroll.size, (curPageData)=>{\n\t\t\t\t\t//联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n\t\t\t\t\tconsole.log(\"mescroll.num=\" + mescroll.num + \", mescroll.size=\" + mescroll.size + \", curPageData.length=\" + curPageData.length);\n\t\t\t\t\tmescroll.endSuccess(curPageData.length);\n\t\t\t\t\t//设置列表数据\n\t\t\t\t\tif(mescroll.num == 1) this.orderList = []; //如果是第一页需手动制空列表\n\t\t\t\t\tthis.orderList=this.orderList.concat(curPageData); //追加新数据\n\t\t\t\t}, () => {\n\t\t\t\t\t//联网失败的回调,隐藏下拉刷新的状态\n\t\t\t\t\tmescroll.endErr();\n\t\t\t\t})\n\t\t\t},\n\t\t\t/*联网加载列表数据\n\t\t\t实际项目以您服务器接口返回的数据为准,无需本地处理分页.\n\t\t\t* */\n\t\t\tasync getListDataFromNet(pageNum,pageSize,successCallback,errorCallback) {\n        console.log(pageNum, pageSize)\n\t\t\t\ttry{\n          let orderList = await this.getOrderList(pageNum, pageSize)\n          this.orderList = orderList\n          console.log('data', this.orderList)\n\t\t\t\t\t//联网成功的回调\n\t\t\t\t\tsuccessCallback && successCallback(orderList);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//联网失败的回调\n\t\t\t\t\terrorCallback && errorCallback();\n\t\t\t\t}\n\t\t\t},\n\t\tgetOrderList(pageNum, pageSize) {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tlet data = {\n\t\t\t\t\tOrderStatus: 2,\n\t\t\t\t\tPageID: pageNum,\n\t\t\t\t\tPageSize: pageSize\n\t\t\t\t};\n\t\t\t\trequest(OrderListGet, data).then((res) => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tsesolve(res.OrderList)\n\t\t\t\t});\n\t\t\t})\n\t\t},\n\t\tgoDetail(e) {\n\t\t\tconsole.log(e);\n\t\t\tuni.navigateTo({\n\t\t\t\turl: \"../orderDetail/orderDetail?id=\" + e.OrderID\n\t\t\t});\n\t\t},\n\t\tasync changeTab(e) {\n\t\t\tconsole.log(e);\n\t\t},\n\t\tasync tapTab(e) {\n\t\t\t//点击tab-bar\n\t\t\tconsole.log(e);\n\t\t\tthis.current = e.target.dataset.current;\n\t\t},\n\t\trandomfn() {\n\t\t\tlet ary = [];\n\t\t\tfor (let i = 0, length = this.tabBars.length; i < length; i++) {\n\t\t\t\tlet aryItem = {\n\t\t\t\t\tloadingText: \"加载更多...\",\n\t\t\t\t\tdata: []\n\t\t\t\t};\n\t\t\t\tary.push(aryItem);\n\t\t\t}\n\t\t\treturn ary;\n\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\npage {\n\twidth: 100%;\n\theight: 100%;\n}\n.content {\n\twidth: 100%;\n\theight: 100%;\n}\n.swiper {\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: scroll;\n}\n.active {\n\tcolor: #fe7f00;\n}\n.i-tab-bar-loading {\n\ttext-align: center;\n\tfont-size: 28upx;\n\tcolor: #999;\n}\n.i-swiper-tab {\n\theight: 98upx;\n\tline-height: 98upx;\n\tbackground-color: #fff;\n\tborder-bottom: 2upx solid #f4f4f4;\n}\n.scroll-view-list {\n\twidth: 100%;\n\theight: 100%;\n}\n\timage{width: 100%;}\n\t.header{z-index: 9900;position: fixed;top: --window-top;left: 0;height: 180upx;background: white;}\n\t.footer{z-index: 9900;position: fixed;bottom: 0;left: 0;height: 100upx;background: white;}\n</style>"],"sourceRoot":"src/pages/ucenter/orderList"}]}