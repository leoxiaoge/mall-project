{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-2!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--18-0!/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/components/gaoyia-parse/components/wxParseTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/components/gaoyia-parse/components/wxParseTable.vue","mtime":1568125935175},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1563798333387},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1563798331564}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\nvar _default2 = {\n  name: 'wxParseTable',\n  props: {\n    node: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  inject: ['parseSelect'],\n  data: function data() {\n    return {\n      nodes: []\n    };\n  },\n  mounted: function mounted() {\n    this.nodes = this.loadNode([this.node]);\n  },\n  methods: {\n    loadNode: function loadNode(node) {\n      var obj = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = node[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var children = _step.value;\n\n          // console.log(children)\n          if (children.node == 'element') {\n            var t = {\n              name: children.tag,\n              attrs: {\n                class: children.classStr // style: children.styleStr,\n\n              },\n              children: children.nodes ? this.loadNode(children.nodes) : []\n            };\n            obj.push(t);\n          } else if (children.node == 'text') {\n            obj.push({\n              type: 'text',\n              text: children.text\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return obj;\n    }\n  }\n};\nexports.default = _default2;",{"version":3,"sources":["wxParseTable.vue"],"names":[],"mappings":";;;;;;;;;gBAIA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GAFA;AAUA,EAAA,MAAA,EAAA,CAAA,aAAA,CAVA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,KAAA,GAAA,KAAA,QAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA,UAAA,GAAA,GAAA,EAAA;AADA;AAAA;AAAA;;AAAA;AAEA,6BAAA,IAAA,8HAAA;AAAA,cAAA,QAAA;;AACA;AACA,cAAA,QAAA,CAAA,IAAA,IAAA,SAAA,EAAA;AACA,gBAAA,CAAA,GAAA;AACA,cAAA,IAAA,EAAA,QAAA,CAAA,GADA;AAEA,cAAA,KAAA,EAAA;AACA,gBAAA,KAAA,EAAA,QAAA,CAAA,QADA,CAEA;;AAFA,eAFA;AAMA,cAAA,QAAA,EAAA,QAAA,CAAA,KAAA,GAAA,KAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA;AANA,aAAA;AASA,YAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,WAXA,MAWA,IAAA,QAAA,CAAA,IAAA,IAAA,MAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA,QAAA,CAAA;AAFA,aAAA;AAIA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,aAAA,GAAA;AACA;AAxBA;AAnBA,C","sourcesContent":["<template>\n\t<rich-text :nodes=\"nodes\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\"></rich-text>\n</template>\n<script>\nexport default {\n\tname: 'wxParseTable',\n\tprops: {\n\t\tnode: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t},\n\tinject: ['parseSelect'],\n\tdata() {\n\t\treturn {\n\t\t\tnodes:[]\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.nodes=this.loadNode([this.node]);\n\t},\n\tmethods: {\n\t\tloadNode(node) {\n\t\t\tlet obj = [];\n\t\t\tfor (let children of node) {\n\t\t\t\t// console.log(children)\n\t\t\t\tif (children.node=='element') {\n\t\t\t\t\tlet t = {\n\t\t\t\t\t\tname:children.tag,\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclass: children.classStr,\n\t\t\t\t\t\t\t// style: children.styleStr,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchildren: children.nodes?this.loadNode(children.nodes):[]\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.push(t)\n\t\t\t\t} else if(children.node=='text'){\n\t\t\t\t\tobj.push({\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: children.text\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t}\n};\n</script>\n<style scoped>\n\t@import url(\"../parse.css\");\n</style>"],"sourceRoot":"src/components/gaoyia-parse/components"}]}