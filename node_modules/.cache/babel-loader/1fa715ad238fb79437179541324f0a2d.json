{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-2!/Users/lee/Desktop/github/mall-project/src/components/uParse/src/libs/html2json.js","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/components/uParse/src/libs/html2json.js","mtime":1560269787879},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _wxDiscode = _interopRequireDefault(require(\"./wxDiscode\"));\n\nvar _htmlparser = _interopRequireDefault(require(\"./htmlparser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * html2Json 改造来自: https://github.com/Jxck/html2json\n *\n *\n * author: Di (微信小程序开发工程师)\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n *               垂直微信小程序开发交流社区\n *\n * github地址: https://github.com/icindy/wxParse\n *\n * for: 微信小程序富文本解析\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n */\nfunction makeMap(str) {\n  var obj = {};\n  var items = str.split(',');\n\n  for (var i = 0; i < items.length; i += 1) {\n    obj[items[i]] = true;\n  }\n\n  return obj;\n} // Block Elements - HTML 5\n\n\nvar block = makeMap('br,code,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video'); // Inline Elements - HTML 5\n\nvar inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var'); // Elements that you can, intentionally, leave open\n// (and which close themselves)\n\nvar closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');\n\nfunction removeDOCTYPE(html) {\n  var isDocument = /<body.*>([^]*)<\\/body>/.test(html);\n  return isDocument ? RegExp.$1 : html;\n}\n\nfunction trimHtml(html) {\n  return html.replace(/<!--.*?-->/gi, '').replace(/\\/\\*.*?\\*\\//gi, '').replace(/[ ]+</gi, '<').replace(/<script[^]*<\\/script>/gi, '').replace(/<style[^]*<\\/style>/gi, '');\n}\n\nfunction getScreenInfo() {\n  var screen = {};\n  wx.getSystemInfo({\n    success: function success(res) {\n      screen.width = res.windowWidth;\n      screen.height = res.windowHeight;\n    }\n  });\n  return screen;\n}\n\nfunction html2json(html, customHandler, imageProp, host) {\n  // 处理字符串\n  html = removeDOCTYPE(html);\n  html = trimHtml(html);\n  html = _wxDiscode.default.strDiscode(html); // 生成node节点\n\n  var bufArray = [];\n  var results = {\n    nodes: [],\n    imageUrls: []\n  };\n  var screen = getScreenInfo();\n\n  function Node(tag) {\n    this.node = 'element';\n    this.tag = tag;\n    this.$screen = screen;\n  }\n\n  (0, _htmlparser.default)(html, {\n    start: function start(tag, attrs, unary) {\n      // node for this element\n      var node = new Node(tag);\n\n      if (bufArray.length !== 0) {\n        var parent = bufArray[0];\n\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n      }\n\n      if (block[tag]) {\n        node.tagType = 'block';\n      } else if (inline[tag]) {\n        node.tagType = 'inline';\n      } else if (closeSelf[tag]) {\n        node.tagType = 'closeSelf';\n      }\n\n      node.attr = attrs.reduce(function (pre, attr) {\n        var name = attr.name;\n        var value = attr.value;\n\n        if (name === 'class') {\n          node.classStr = value;\n        } // has multi attibutes\n        // make it array of attribute\n\n\n        if (name === 'style') {\n          node.styleStr = value;\n        }\n\n        if (value.match(/ /)) {\n          value = value.split(' ');\n        } // if attr already exists\n        // merge it\n\n\n        if (pre[name]) {\n          if (Array.isArray(pre[name])) {\n            // already array, push to last\n            pre[name].push(value);\n          } else {\n            // single value, make it array\n            pre[name] = [pre[name], value];\n          }\n        } else {\n          // not exist, put it\n          pre[name] = value;\n        }\n\n        return pre;\n      }, {}); // 优化样式相关属性\n\n      if (node.classStr) {\n        node.classStr += \" \".concat(node.tag);\n      } else {\n        node.classStr = node.tag;\n      }\n\n      if (node.tagType === 'inline') {\n        node.classStr += ' inline';\n      } // 对img添加额外数据\n\n\n      if (node.tag === 'img') {\n        var imgUrl = node.attr.src;\n        imgUrl = _wxDiscode.default.urlToHttpUrl(imgUrl, imageProp.domain);\n        Object.assign(node.attr, imageProp, {\n          src: imgUrl || ''\n        });\n\n        if (imgUrl) {\n          results.imageUrls.push(imgUrl);\n        }\n      } // 处理a标签属性\n\n\n      if (node.tag === 'a') {\n        node.attr.href = node.attr.href || '';\n      } // 处理font标签样式属性\n\n\n      if (node.tag === 'font') {\n        var fontSize = ['x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', '-webkit-xxx-large'];\n        var styleAttrs = {\n          color: 'color',\n          face: 'font-family',\n          size: 'font-size'\n        };\n        if (!node.styleStr) node.styleStr = '';\n        Object.keys(styleAttrs).forEach(function (key) {\n          if (node.attr[key]) {\n            var value = key === 'size' ? fontSize[node.attr[key] - 1] : node.attr[key];\n            node.styleStr += \"\".concat(styleAttrs[key], \": \").concat(value, \";\");\n          }\n        });\n      } // 临时记录source资源\n\n\n      if (node.tag === 'source') {\n        results.source = node.attr.src;\n      }\n\n      if (customHandler.start) {\n        customHandler.start(node, results);\n      }\n\n      if (unary) {\n        // if this tag doesn't have end tag\n        // like <img src=\"hoge.png\"/>\n        // add to parents\n        var _parent = bufArray[0] || results;\n\n        if (_parent.nodes === undefined) {\n          _parent.nodes = [];\n        }\n\n        _parent.nodes.push(node);\n      } else {\n        bufArray.unshift(node);\n      }\n    },\n    end: function end(tag) {\n      // merge into parent tag\n      var node = bufArray.shift();\n\n      if (node.tag !== tag) {\n        console.error('invalid state: mismatch end tag');\n      } // 当有缓存source资源时于于video补上src资源\n\n\n      if (node.tag === 'video' && results.source) {\n        node.attr.src = results.source;\n        delete results.source;\n      }\n\n      if (customHandler.end) {\n        customHandler.end(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        var parent = bufArray[0];\n\n        if (!parent.nodes) {\n          parent.nodes = [];\n        }\n\n        parent.nodes.push(node);\n      }\n    },\n    chars: function chars(text) {\n      if (!text.trim()) return;\n      var node = {\n        node: 'text',\n        text: text\n      };\n\n      if (customHandler.chars) {\n        customHandler.chars(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        var parent = bufArray[0];\n\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n\n        parent.nodes.push(node);\n      }\n    }\n  });\n  return results;\n}\n\nvar _default = html2json;\nexports.default = _default;",{"version":3,"sources":["/Users/lee/Desktop/github/mall-project/src/components/uParse/src/libs/html2json.js"],"names":["makeMap","str","obj","items","split","i","length","block","inline","closeSelf","removeDOCTYPE","html","isDocument","test","RegExp","$1","trimHtml","replace","getScreenInfo","screen","wx","getSystemInfo","success","res","width","windowWidth","height","windowHeight","html2json","customHandler","imageProp","host","wxDiscode","strDiscode","bufArray","results","nodes","imageUrls","Node","tag","node","$screen","start","attrs","unary","parent","undefined","tagType","attr","reduce","pre","name","value","classStr","styleStr","match","Array","isArray","push","imgUrl","src","urlToHttpUrl","domain","Object","assign","href","fontSize","styleAttrs","color","face","size","keys","forEach","key","source","unshift","end","shift","console","error","chars","text","trim"],"mappings":";;;;;;;AAcA;;AACA;;;;AAfA;;;;;;;;;;;;;AAiBA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,IAAI,CAAvC;AAA0CH,IAAAA,GAAG,CAACC,KAAK,CAACE,CAAD,CAAN,CAAH,GAAgB,IAAhB;AAA1C;;AACA,SAAOH,GAAP;AACD,C,CAED;;;AACA,IAAMK,KAAK,GAAGP,OAAO,CAAC,qTAAD,CAArB,C,CAEA;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,4LAAD,CAAtB,C,CAEA;AACA;;AACA,IAAMS,SAAS,GAAGT,OAAO,CAAC,kDAAD,CAAzB;;AAEA,SAASU,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAMC,UAAU,GAAG,yBAAyBC,IAAzB,CAA8BF,IAA9B,CAAnB;AACA,SAAOC,UAAU,GAAGE,MAAM,CAACC,EAAV,GAAeJ,IAAhC;AACD;;AAED,SAASK,QAAT,CAAkBL,IAAlB,EAAwB;AACtB,SAAOA,IAAI,CACRM,OADI,CACI,cADJ,EACoB,EADpB,EAEJA,OAFI,CAEI,eAFJ,EAEqB,EAFrB,EAGJA,OAHI,CAGI,SAHJ,EAGe,GAHf,EAIJA,OAJI,CAII,yBAJJ,EAI+B,EAJ/B,EAKJA,OALI,CAKI,uBALJ,EAK6B,EAL7B,CAAP;AAMD;;AAED,SAASC,aAAT,GAAyB;AACvB,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,EAAE,CAACC,aAAH,CAAiB;AACfC,IAAAA,OAAO,EAAE,iBAACC,GAAD,EAAS;AAChBJ,MAAAA,MAAM,CAACK,KAAP,GAAeD,GAAG,CAACE,WAAnB;AACAN,MAAAA,MAAM,CAACO,MAAP,GAAgBH,GAAG,CAACI,YAApB;AACD;AAJc,GAAjB;AAMA,SAAOR,MAAP;AACD;;AAED,SAASS,SAAT,CAAmBjB,IAAnB,EAAyBkB,aAAzB,EAAwCC,SAAxC,EAAmDC,IAAnD,EAAyD;AACvD;AACApB,EAAAA,IAAI,GAAGD,aAAa,CAACC,IAAD,CAApB;AACAA,EAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAD,CAAf;AACAA,EAAAA,IAAI,GAAGqB,mBAAUC,UAAV,CAAqBtB,IAArB,CAAP,CAJuD,CAKvD;;AACA,MAAMuB,QAAQ,GAAG,EAAjB;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE,EADO;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAAhB;AAKD,MAAMlB,MAAM,GAAGD,aAAa,EAA5B;;AACC,WAASoB,IAAT,CAAcC,GAAd,EAAmB;AACjB,SAAKC,IAAL,GAAY,SAAZ;AACA,SAAKD,GAAL,GAAWA,GAAX;AAEF,SAAKE,OAAL,GAAetB,MAAf;AACC;;AAED,2BAAWR,IAAX,EAAiB;AACf+B,IAAAA,KADe,iBACTH,GADS,EACJI,KADI,EACGC,KADH,EACU;AACvB;AACA,UAAMJ,IAAI,GAAG,IAAIF,IAAJ,CAASC,GAAT,CAAb;;AAEA,UAAIL,QAAQ,CAAC5B,MAAT,KAAoB,CAAxB,EAA2B;AACzB,YAAMuC,MAAM,GAAGX,QAAQ,CAAC,CAAD,CAAvB;;AACA,YAAIW,MAAM,CAACT,KAAP,KAAiBU,SAArB,EAAgC;AAC9BD,UAAAA,MAAM,CAACT,KAAP,GAAe,EAAf;AACD;AACF;;AAED,UAAI7B,KAAK,CAACgC,GAAD,CAAT,EAAgB;AACdC,QAAAA,IAAI,CAACO,OAAL,GAAe,OAAf;AACD,OAFD,MAEO,IAAIvC,MAAM,CAAC+B,GAAD,CAAV,EAAiB;AACtBC,QAAAA,IAAI,CAACO,OAAL,GAAe,QAAf;AACD,OAFM,MAEA,IAAItC,SAAS,CAAC8B,GAAD,CAAb,EAAoB;AACzBC,QAAAA,IAAI,CAACO,OAAL,GAAe,WAAf;AACD;;AAEDP,MAAAA,IAAI,CAACQ,IAAL,GAAYL,KAAK,CAACM,MAAN,CAAa,UAACC,GAAD,EAAMF,IAAN,EAAe;AAAA,YAC9BG,IAD8B,GACrBH,IADqB,CAC9BG,IAD8B;AAAA,YAEhCC,KAFgC,GAEtBJ,IAFsB,CAEhCI,KAFgC;;AAGtC,YAAID,IAAI,KAAK,OAAb,EAAsB;AACpBX,UAAAA,IAAI,CAACa,QAAL,GAAgBD,KAAhB;AACD,SALqC,CAMtC;AACA;;;AACA,YAAID,IAAI,KAAK,OAAb,EAAsB;AACpBX,UAAAA,IAAI,CAACc,QAAL,GAAgBF,KAAhB;AACD;;AACD,YAAIA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAJ,EAAsB;AACpBH,UAAAA,KAAK,GAAGA,KAAK,CAAChD,KAAN,CAAY,GAAZ,CAAR;AACD,SAbqC,CAetC;AACA;;;AACA,YAAI8C,GAAG,CAACC,IAAD,CAAP,EAAe;AACb,cAAIK,KAAK,CAACC,OAAN,CAAcP,GAAG,CAACC,IAAD,CAAjB,CAAJ,EAA8B;AAC5B;AACAD,YAAAA,GAAG,CAACC,IAAD,CAAH,CAAUO,IAAV,CAAeN,KAAf;AACD,WAHD,MAGO;AACL;AACAF,YAAAA,GAAG,CAACC,IAAD,CAAH,GAAY,CAACD,GAAG,CAACC,IAAD,CAAJ,EAAYC,KAAZ,CAAZ;AACD;AACF,SARD,MAQO;AACL;AACAF,UAAAA,GAAG,CAACC,IAAD,CAAH,GAAYC,KAAZ;AACD;;AAED,eAAOF,GAAP;AACD,OA/BW,EA+BT,EA/BS,CAAZ,CAnBuB,CAoDvB;;AACA,UAAIV,IAAI,CAACa,QAAT,EAAmB;AACjBb,QAAAA,IAAI,CAACa,QAAL,eAAqBb,IAAI,CAACD,GAA1B;AACD,OAFD,MAEO;AACLC,QAAAA,IAAI,CAACa,QAAL,GAAgBb,IAAI,CAACD,GAArB;AACD;;AACD,UAAIC,IAAI,CAACO,OAAL,KAAiB,QAArB,EAA+B;AAC7BP,QAAAA,IAAI,CAACa,QAAL,IAAiB,SAAjB;AACD,OA5DsB,CA8DvB;;;AACA,UAAIb,IAAI,CAACD,GAAL,KAAa,KAAjB,EAAwB;AACtB,YAAIoB,MAAM,GAAGnB,IAAI,CAACQ,IAAL,CAAUY,GAAvB;AACAD,QAAAA,MAAM,GAAG3B,mBAAU6B,YAAV,CAAuBF,MAAvB,EAA+B7B,SAAS,CAACgC,MAAzC,CAAT;AACAC,QAAAA,MAAM,CAACC,MAAP,CAAcxB,IAAI,CAACQ,IAAnB,EAAyBlB,SAAzB,EAAoC;AAClC8B,UAAAA,GAAG,EAAED,MAAM,IAAI;AADmB,SAApC;;AAGA,YAAIA,MAAJ,EAAY;AACVxB,UAAAA,OAAO,CAACE,SAAR,CAAkBqB,IAAlB,CAAuBC,MAAvB;AACD;AACF,OAxEsB,CA0EvB;;;AACA,UAAInB,IAAI,CAACD,GAAL,KAAa,GAAjB,EAAsB;AACpBC,QAAAA,IAAI,CAACQ,IAAL,CAAUiB,IAAV,GAAiBzB,IAAI,CAACQ,IAAL,CAAUiB,IAAV,IAAkB,EAAnC;AACD,OA7EsB,CA+EvB;;;AACA,UAAIzB,IAAI,CAACD,GAAL,KAAa,MAAjB,EAAyB;AACvB,YAAM2B,QAAQ,GAAG,CACf,SADe,EAEf,OAFe,EAGf,QAHe,EAIf,OAJe,EAKf,SALe,EAMf,UANe,EAOf,mBAPe,CAAjB;AASA,YAAMC,UAAU,GAAG;AACjBC,UAAAA,KAAK,EAAE,OADU;AAEjBC,UAAAA,IAAI,EAAE,aAFW;AAGjBC,UAAAA,IAAI,EAAE;AAHW,SAAnB;AAKA,YAAI,CAAC9B,IAAI,CAACc,QAAV,EAAoBd,IAAI,CAACc,QAAL,GAAgB,EAAhB;AACpBS,QAAAA,MAAM,CAACQ,IAAP,CAAYJ,UAAZ,EAAwBK,OAAxB,CAAgC,UAACC,GAAD,EAAS;AACvC,cAAIjC,IAAI,CAACQ,IAAL,CAAUyB,GAAV,CAAJ,EAAoB;AAClB,gBAAMrB,KAAK,GAAGqB,GAAG,KAAK,MAAR,GAAiBP,QAAQ,CAAC1B,IAAI,CAACQ,IAAL,CAAUyB,GAAV,IAAiB,CAAlB,CAAzB,GAAgDjC,IAAI,CAACQ,IAAL,CAAUyB,GAAV,CAA9D;AACAjC,YAAAA,IAAI,CAACc,QAAL,cAAoBa,UAAU,CAACM,GAAD,CAA9B,eAAwCrB,KAAxC;AACD;AACF,SALD;AAMD,OAtGsB,CAwGvB;;;AACA,UAAIZ,IAAI,CAACD,GAAL,KAAa,QAAjB,EAA2B;AACzBJ,QAAAA,OAAO,CAACuC,MAAR,GAAiBlC,IAAI,CAACQ,IAAL,CAAUY,GAA3B;AACD;;AAED,UAAI/B,aAAa,CAACa,KAAlB,EAAyB;AACvBb,QAAAA,aAAa,CAACa,KAAd,CAAoBF,IAApB,EAA0BL,OAA1B;AACD;;AAED,UAAIS,KAAJ,EAAW;AACT;AACA;AACA;AACA,YAAMC,OAAM,GAAGX,QAAQ,CAAC,CAAD,CAAR,IAAeC,OAA9B;;AACA,YAAIU,OAAM,CAACT,KAAP,KAAiBU,SAArB,EAAgC;AAC9BD,UAAAA,OAAM,CAACT,KAAP,GAAe,EAAf;AACD;;AACDS,QAAAA,OAAM,CAACT,KAAP,CAAasB,IAAb,CAAkBlB,IAAlB;AACD,OATD,MASO;AACLN,QAAAA,QAAQ,CAACyC,OAAT,CAAiBnC,IAAjB;AACD;AACF,KA9Hc;AA+HfoC,IAAAA,GA/He,eA+HXrC,GA/HW,EA+HN;AACP;AACA,UAAMC,IAAI,GAAGN,QAAQ,CAAC2C,KAAT,EAAb;;AACA,UAAIrC,IAAI,CAACD,GAAL,KAAaA,GAAjB,EAAsB;AACpBuC,QAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd;AACD,OALM,CAOP;;;AACA,UAAIvC,IAAI,CAACD,GAAL,KAAa,OAAb,IAAwBJ,OAAO,CAACuC,MAApC,EAA4C;AAC1ClC,QAAAA,IAAI,CAACQ,IAAL,CAAUY,GAAV,GAAgBzB,OAAO,CAACuC,MAAxB;AACA,eAAOvC,OAAO,CAACuC,MAAf;AACD;;AAED,UAAI7C,aAAa,CAAC+C,GAAlB,EAAuB;AACrB/C,QAAAA,aAAa,CAAC+C,GAAd,CAAkBpC,IAAlB,EAAwBL,OAAxB;AACD;;AAED,UAAID,QAAQ,CAAC5B,MAAT,KAAoB,CAAxB,EAA2B;AACzB6B,QAAAA,OAAO,CAACC,KAAR,CAAcsB,IAAd,CAAmBlB,IAAnB;AACD,OAFD,MAEO;AACL,YAAMK,MAAM,GAAGX,QAAQ,CAAC,CAAD,CAAvB;;AACA,YAAI,CAACW,MAAM,CAACT,KAAZ,EAAmB;AACjBS,UAAAA,MAAM,CAACT,KAAP,GAAe,EAAf;AACD;;AACDS,QAAAA,MAAM,CAACT,KAAP,CAAasB,IAAb,CAAkBlB,IAAlB;AACD;AACF,KAzJc;AA0JfwC,IAAAA,KA1Je,iBA0JTC,IA1JS,EA0JH;AACV,UAAI,CAACA,IAAI,CAACC,IAAL,EAAL,EAAkB;AAElB,UAAM1C,IAAI,GAAG;AACXA,QAAAA,IAAI,EAAE,MADK;AAEXyC,QAAAA,IAAI,EAAJA;AAFW,OAAb;;AAKA,UAAIpD,aAAa,CAACmD,KAAlB,EAAyB;AACvBnD,QAAAA,aAAa,CAACmD,KAAd,CAAoBxC,IAApB,EAA0BL,OAA1B;AACD;;AAED,UAAID,QAAQ,CAAC5B,MAAT,KAAoB,CAAxB,EAA2B;AACzB6B,QAAAA,OAAO,CAACC,KAAR,CAAcsB,IAAd,CAAmBlB,IAAnB;AACD,OAFD,MAEO;AACL,YAAMK,MAAM,GAAGX,QAAQ,CAAC,CAAD,CAAvB;;AACA,YAAIW,MAAM,CAACT,KAAP,KAAiBU,SAArB,EAAgC;AAC9BD,UAAAA,MAAM,CAACT,KAAP,GAAe,EAAf;AACD;;AACDS,QAAAA,MAAM,CAACT,KAAP,CAAasB,IAAb,CAAkBlB,IAAlB;AACD;AACF;AA/Kc,GAAjB;AAkLA,SAAOL,OAAP;AACD;;eAEcP,S","sourcesContent":["/**\n * html2Json 改造来自: https://github.com/Jxck/html2json\n *\n *\n * author: Di (微信小程序开发工程师)\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n *               垂直微信小程序开发交流社区\n *\n * github地址: https://github.com/icindy/wxParse\n *\n * for: 微信小程序富文本解析\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n */\n\nimport wxDiscode from './wxDiscode';\nimport HTMLParser from './htmlparser';\n\nfunction makeMap(str) {\n  const obj = {};\n  const items = str.split(',');\n  for (let i = 0; i < items.length; i += 1) obj[items[i]] = true;\n  return obj;\n}\n\n// Block Elements - HTML 5\nconst block = makeMap('br,code,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video');\n\n// Inline Elements - HTML 5\nconst inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nconst closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');\n\nfunction removeDOCTYPE(html) {\n  const isDocument = /<body.*>([^]*)<\\/body>/.test(html);\n  return isDocument ? RegExp.$1 : html;\n}\n\nfunction trimHtml(html) {\n  return html\n    .replace(/<!--.*?-->/gi, '')\n    .replace(/\\/\\*.*?\\*\\//gi, '')\n    .replace(/[ ]+</gi, '<')\n    .replace(/<script[^]*<\\/script>/gi, '')\n    .replace(/<style[^]*<\\/style>/gi, '');\n}\n\nfunction getScreenInfo() {\n  const screen = {};\n  wx.getSystemInfo({\n    success: (res) => {\n      screen.width = res.windowWidth;\n      screen.height = res.windowHeight;\n    },\n  });\n  return screen;\n}\n\nfunction html2json(html, customHandler, imageProp, host) {\n  // 处理字符串\n  html = removeDOCTYPE(html);\n  html = trimHtml(html);\n  html = wxDiscode.strDiscode(html);\n  // 生成node节点\n  const bufArray = [];\n  const results = {\n    nodes: [],\n    imageUrls: [],\n  };\n\n\tconst screen = getScreenInfo();\n  function Node(tag) {\n    this.node = 'element';\n    this.tag = tag;\n\t\t\n\t\tthis.$screen = screen;\n  }\n\n  HTMLParser(html, {\n    start(tag, attrs, unary) {\n      // node for this element\n      const node = new Node(tag);\n\n      if (bufArray.length !== 0) {\n        const parent = bufArray[0];\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n      }\n\n      if (block[tag]) {\n        node.tagType = 'block';\n      } else if (inline[tag]) {\n        node.tagType = 'inline';\n      } else if (closeSelf[tag]) {\n        node.tagType = 'closeSelf';\n      }\n\n      node.attr = attrs.reduce((pre, attr) => {\n        const { name } = attr;\n        let { value } = attr;\n        if (name === 'class') {\n          node.classStr = value;\n        }\n        // has multi attibutes\n        // make it array of attribute\n        if (name === 'style') {\n          node.styleStr = value;\n        }\n        if (value.match(/ /)) {\n          value = value.split(' ');\n        }\n\n        // if attr already exists\n        // merge it\n        if (pre[name]) {\n          if (Array.isArray(pre[name])) {\n            // already array, push to last\n            pre[name].push(value);\n          } else {\n            // single value, make it array\n            pre[name] = [pre[name], value];\n          }\n        } else {\n          // not exist, put it\n          pre[name] = value;\n        }\n\n        return pre;\n      }, {});\n\n      // 优化样式相关属性\n      if (node.classStr) {\n        node.classStr += ` ${node.tag}`;\n      } else {\n        node.classStr = node.tag;\n      }\n      if (node.tagType === 'inline') {\n        node.classStr += ' inline';\n      }\n\n      // 对img添加额外数据\n      if (node.tag === 'img') {\n        let imgUrl = node.attr.src;\n        imgUrl = wxDiscode.urlToHttpUrl(imgUrl, imageProp.domain);\n        Object.assign(node.attr, imageProp, {\n          src: imgUrl || '',\n        });\n        if (imgUrl) {\n          results.imageUrls.push(imgUrl);\n        }\n      }\n\n      // 处理a标签属性\n      if (node.tag === 'a') {\n        node.attr.href = node.attr.href || '';\n      }\n\n      // 处理font标签样式属性\n      if (node.tag === 'font') {\n        const fontSize = [\n          'x-small',\n          'small',\n          'medium',\n          'large',\n          'x-large',\n          'xx-large',\n          '-webkit-xxx-large',\n        ];\n        const styleAttrs = {\n          color: 'color',\n          face: 'font-family',\n          size: 'font-size',\n        };\n        if (!node.styleStr) node.styleStr = '';\n        Object.keys(styleAttrs).forEach((key) => {\n          if (node.attr[key]) {\n            const value = key === 'size' ? fontSize[node.attr[key] - 1] : node.attr[key];\n            node.styleStr += `${styleAttrs[key]}: ${value};`;\n          }\n        });\n      }\n\n      // 临时记录source资源\n      if (node.tag === 'source') {\n        results.source = node.attr.src;\n      }\n\n      if (customHandler.start) {\n        customHandler.start(node, results);\n      }\n\n      if (unary) {\n        // if this tag doesn't have end tag\n        // like <img src=\"hoge.png\"/>\n        // add to parents\n        const parent = bufArray[0] || results;\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n        parent.nodes.push(node);\n      } else {\n        bufArray.unshift(node);\n      }\n    },\n    end(tag) {\n      // merge into parent tag\n      const node = bufArray.shift();\n      if (node.tag !== tag) {\n        console.error('invalid state: mismatch end tag');\n      }\n\n      // 当有缓存source资源时于于video补上src资源\n      if (node.tag === 'video' && results.source) {\n        node.attr.src = results.source;\n        delete results.source;\n      }\n\n      if (customHandler.end) {\n        customHandler.end(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        const parent = bufArray[0];\n        if (!parent.nodes) {\n          parent.nodes = [];\n        }\n        parent.nodes.push(node);\n      }\n    },\n    chars(text) {\n      if (!text.trim()) return;\n\n      const node = {\n        node: 'text',\n        text,\n      };\n\n      if (customHandler.chars) {\n        customHandler.chars(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        const parent = bufArray[0];\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n        parent.nodes.push(node);\n      }\n    },\n  });\n\n  return results;\n}\n\nexport default html2json;\n"]}]}