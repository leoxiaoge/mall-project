{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/pages/ucenter/orderList/orderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/pages/ucenter/orderList/orderList.vue","mtime":1562072823377},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1561751947145}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport { request, navigateTo } from \"@/common/utils/util\";\n\timport { OrderListGet } from \"@/common/config/api\";\n\t// 自定义的mescroll-beibei.vue\n\timport MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\n\timport mediaList from \"@/components/tab-nvue/mediaList.vue\";\n\timport PdList from \"@/components/other/pd-list.vue\";\n\t// 模拟数据\n\timport mockData from \"@/common/pdlist.js\";\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tMescrollUni,\n\t\t\tmediaList,\n\t\t\tPdList\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tscrollLeft: 0,\n\t\t\t\tisClickChange: false,\n\t\t\t\tcurrent: 0,\n\t\t\t\torderList: [], // 订单列表\n\t\t\t\ttabBars: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"全部\",\n\t\t\t\t\t\tid: \"0\",\n\t\t\t\t\t\tstatus: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待付款\",\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\tstatus: \"1\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待发货\",\n\t\t\t\t\t\tid: \"2\",\n\t\t\t\t\t\tstatus: \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待收货\",\n\t\t\t\t\t\tid: \"3\",\n\t\t\t\t\t\tstatus: \"3\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待晒单\",\n\t\t\t\t\t\tid: \"4\",\n\t\t\t\t\t\tstatus: \"4\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tpdList: [] // 数据列表\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\tconsole.log(options);\n\t\t\tlet status = options.status;\n\t\t\tthis.current = status;\n\t\t},\n\t\tmethods: {\n\t\t\t/*下拉刷新的回调 */\n\t\t\tdownCallback(mescroll) {\n\t\t\t\t// 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\n\t\t\t\tmescroll.resetUpScroll()\n\t\t\t},\n\t\t\t/*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\n\t\t\tupCallback(mescroll) {\n\t\t\t\t//联网加载数据\n\t\t\t\tthis.getListDataFromNet(mescroll.num, mescroll.size, (curPageData)=>{\n\t\t\t\t\t//联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n\t\t\t\t\tconsole.log(\"mescroll.num=\" + mescroll.num + \", mescroll.size=\" + mescroll.size + \", curPageData.length=\" + curPageData.length);\n\t\t\t\t\tmescroll.endSuccess(curPageData.length);\n\t\t\t\t\t//设置列表数据\n\t\t\t\t\tif(mescroll.num == 1) this.orderList = []; //如果是第一页需手动制空列表\n\t\t\t\t\tthis.orderList=this.orderList.concat(curPageData); //追加新数据\n\t\t\t\t}, () => {\n\t\t\t\t\t//联网失败的回调,隐藏下拉刷新的状态\n\t\t\t\t\tmescroll.endErr();\n\t\t\t\t})\n\t\t\t},\n\t\t\t/*联网加载列表数据\n\t\t\t实际项目以您服务器接口返回的数据为准,无需本地处理分页.\n\t\t\t* */\n\t\t\tasync getListDataFromNet(pageNum,pageSize,successCallback,errorCallback) {\n        console.log(pageNum, pageSize)\n\t\t\t\ttry{\n          let orderList = await this.getOrderList(pageNum, pageSize)\n          this.orderList = orderList\n          console.log('data', this.orderList)\n\t\t\t\t\t//联网成功的回调\n\t\t\t\t\tsuccessCallback && successCallback(orderList);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//联网失败的回调\n\t\t\t\t\terrorCallback && errorCallback();\n\t\t\t\t}\n\t\t\t},\n\t\tgetOrderList(pageNum, pageSize) {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tlet data = {\n\t\t\t\t\tOrderStatus: 2,\n\t\t\t\t\tPageID: pageNum,\n\t\t\t\t\tPageSize: pageSize\n\t\t\t\t};\n\t\t\t\trequest(OrderListGet, data).then((res) => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tsesolve(res.OrderList)\n\t\t\t\t});\n\t\t\t})\n\t\t},\n\t\tgoDetail(e) {\n\t\t\tconsole.log(e);\n\t\t\tuni.navigateTo({\n\t\t\t\turl: \"../orderDetail/orderDetail?id=\" + e.OrderID\n\t\t\t});\n\t\t},\n\t\tasync changeTab(e) {\n\t\t\tconsole.log(e);\n\t\t},\n\t\tasync tapTab(e) {\n\t\t\t//点击tab-bar\n\t\t\tconsole.log(e);\n\t\t\tthis.current = e.target.dataset.current;\n\t\t},\n\t\trandomfn() {\n\t\t\tlet ary = [];\n\t\t\tfor (let i = 0, length = this.tabBars.length; i < length; i++) {\n\t\t\t\tlet aryItem = {\n\t\t\t\t\tloadingText: \"加载更多...\",\n\t\t\t\t\tdata: []\n\t\t\t\t};\n\t\t\t\tary.push(aryItem);\n\t\t\t}\n\t\t\treturn ary;\n\t\t}\n\t\t}\n\t}\n",{"version":3,"sources":["orderList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"orderList.vue","sourceRoot":"src/pages/ucenter/orderList","sourcesContent":["<template>\n\t<view>\n\t\t<scroll-view id=\"tab-bar\" class=\"i-swiper-tab\" scroll-x :scroll-left=\"scrollLeft\">\n\t\t\t<view\n\t\t\t\tv-for=\"(tab, index) in tabBars\"\n\t\t\t\t:key=\"index\"\n\t\t\t\tclass=\"swiper-tab-list\"\n\t\t\t\t:class=\"current==tab.status ? 'active' : ''\"\n\t\t\t\t:id=\"tab.id\"\n\t\t\t\t:data-current=\"tab.status\"\n\t\t\t\t@click=\"tapTab\"\n\t\t\t>{{tab.name}}</view>\n\t\t</scroll-view>\n\t\t<mescroll-uni top=\"98\" @down=\"downCallback\" @up=\"upCallback\">\n\t\t\t<block v-for=\"(item, index) in orderList\" :key=\"index\">\n\t\t\t\t<media-list :options=\"item\" @click=\"goDetail(item)\"></media-list>\n\t\t\t</block>\n\t\t</mescroll-uni>\n\t</view>\n</template>\n\n<script>\n\timport { request, navigateTo } from \"@/common/utils/util\";\n\timport { OrderListGet } from \"@/common/config/api\";\n\t// 自定义的mescroll-beibei.vue\n\timport MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\n\timport mediaList from \"@/components/tab-nvue/mediaList.vue\";\n\timport PdList from \"@/components/other/pd-list.vue\";\n\t// 模拟数据\n\timport mockData from \"@/common/pdlist.js\";\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tMescrollUni,\n\t\t\tmediaList,\n\t\t\tPdList\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tscrollLeft: 0,\n\t\t\t\tisClickChange: false,\n\t\t\t\tcurrent: 0,\n\t\t\t\torderList: [], // 订单列表\n\t\t\t\ttabBars: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"全部\",\n\t\t\t\t\t\tid: \"0\",\n\t\t\t\t\t\tstatus: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待付款\",\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\tstatus: \"1\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待发货\",\n\t\t\t\t\t\tid: \"2\",\n\t\t\t\t\t\tstatus: \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待收货\",\n\t\t\t\t\t\tid: \"3\",\n\t\t\t\t\t\tstatus: \"3\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"待晒单\",\n\t\t\t\t\t\tid: \"4\",\n\t\t\t\t\t\tstatus: \"4\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tpdList: [] // 数据列表\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\tconsole.log(options);\n\t\t\tlet status = options.status;\n\t\t\tthis.current = status;\n\t\t},\n\t\tmethods: {\n\t\t\t/*下拉刷新的回调 */\n\t\t\tdownCallback(mescroll) {\n\t\t\t\t// 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\n\t\t\t\tmescroll.resetUpScroll()\n\t\t\t},\n\t\t\t/*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\n\t\t\tupCallback(mescroll) {\n\t\t\t\t//联网加载数据\n\t\t\t\tthis.getListDataFromNet(mescroll.num, mescroll.size, (curPageData)=>{\n\t\t\t\t\t//联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n\t\t\t\t\tconsole.log(\"mescroll.num=\" + mescroll.num + \", mescroll.size=\" + mescroll.size + \", curPageData.length=\" + curPageData.length);\n\t\t\t\t\tmescroll.endSuccess(curPageData.length);\n\t\t\t\t\t//设置列表数据\n\t\t\t\t\tif(mescroll.num == 1) this.orderList = []; //如果是第一页需手动制空列表\n\t\t\t\t\tthis.orderList=this.orderList.concat(curPageData); //追加新数据\n\t\t\t\t}, () => {\n\t\t\t\t\t//联网失败的回调,隐藏下拉刷新的状态\n\t\t\t\t\tmescroll.endErr();\n\t\t\t\t})\n\t\t\t},\n\t\t\t/*联网加载列表数据\n\t\t\t实际项目以您服务器接口返回的数据为准,无需本地处理分页.\n\t\t\t* */\n\t\t\tasync getListDataFromNet(pageNum,pageSize,successCallback,errorCallback) {\n        console.log(pageNum, pageSize)\n\t\t\t\ttry{\n          let orderList = await this.getOrderList(pageNum, pageSize)\n          this.orderList = orderList\n          console.log('data', this.orderList)\n\t\t\t\t\t//联网成功的回调\n\t\t\t\t\tsuccessCallback && successCallback(orderList);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//联网失败的回调\n\t\t\t\t\terrorCallback && errorCallback();\n\t\t\t\t}\n\t\t\t},\n\t\tgetOrderList(pageNum, pageSize) {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tlet data = {\n\t\t\t\t\tOrderStatus: 2,\n\t\t\t\t\tPageID: pageNum,\n\t\t\t\t\tPageSize: pageSize\n\t\t\t\t};\n\t\t\t\trequest(OrderListGet, data).then((res) => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tsesolve(res.OrderList)\n\t\t\t\t});\n\t\t\t})\n\t\t},\n\t\tgoDetail(e) {\n\t\t\tconsole.log(e);\n\t\t\tuni.navigateTo({\n\t\t\t\turl: \"../orderDetail/orderDetail?id=\" + e.OrderID\n\t\t\t});\n\t\t},\n\t\tasync changeTab(e) {\n\t\t\tconsole.log(e);\n\t\t},\n\t\tasync tapTab(e) {\n\t\t\t//点击tab-bar\n\t\t\tconsole.log(e);\n\t\t\tthis.current = e.target.dataset.current;\n\t\t},\n\t\trandomfn() {\n\t\t\tlet ary = [];\n\t\t\tfor (let i = 0, length = this.tabBars.length; i < length; i++) {\n\t\t\t\tlet aryItem = {\n\t\t\t\t\tloadingText: \"加载更多...\",\n\t\t\t\t\tdata: []\n\t\t\t\t};\n\t\t\t\tary.push(aryItem);\n\t\t\t}\n\t\t\treturn ary;\n\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\npage {\n\twidth: 100%;\n\theight: 100%;\n}\n.content {\n\twidth: 100%;\n\theight: 100%;\n}\n.swiper {\n\tbox-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: scroll;\n}\n.active {\n\tcolor: #fe7f00;\n}\n.i-tab-bar-loading {\n\ttext-align: center;\n\tfont-size: 28upx;\n\tcolor: #999;\n}\n.i-swiper-tab {\n\theight: 98upx;\n\tline-height: 98upx;\n\tbackground-color: #fff;\n\tborder-bottom: 2upx solid #f4f4f4;\n}\n.scroll-view-list {\n\twidth: 100%;\n\theight: 100%;\n}\n\timage{width: 100%;}\n\t.header{z-index: 9900;position: fixed;top: --window-top;left: 0;height: 180upx;background: white;}\n\t.footer{z-index: 9900;position: fixed;bottom: 0;left: 0;height: 100upx;background: white;}\n</style>"]}]}