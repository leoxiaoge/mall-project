{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/pages/index/home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/pages/index/home.vue","mtime":1563609745330},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/ts-loader/index.js","mtime":1560261210667},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1561751947145}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  import Vue from 'vue'\n  import { request, navigateTo, formatTime } from '@/common/utils/util'\n  import { AdsListGet, LastTransactionListGet, HomeProductListGet } from '@/common/config/api'\n  import MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\n  import uniGrid from '@/components/uni-grid/uni-grid.vue'\n  import productList from '@/components/product-list/product-list.vue'\n  import productListBeing from '@/components/product-list-being/product-list-being.vue'\n  \n  export default Vue.extend({\n\t\tcomponents: {\n      MescrollUni,\n      uniGrid,\n      productListBeing,\n      productList,\n    },\n    data() {\n      return {\n        indicatorDots: true,\n        autoplay: true,\n        interval: 2000,\n        duration: 500,\n        circular: true,\n        indicatorActiveColor: '#fe7f00',\n        multiple: 1,\n        \n        productList: [], // 正在竞拍列表\n        productListIng: [], // 即将开拍列表\n        productListData: [], // 正在竞拍新列表\n        swiperGridHeight: '0px',\n        swiperGridWidth: '100%',\n        swiper:[],\n        LastTranActiveList: [], // 最新成交列表\n\n        list: [{\n          image: '/static/icon_experience.png',\n          text: '体验区',\n          navigateTo: 'experience'\n        },\n        {\n          image: '/static/icon_show.png',\n          text: '晒单',\n          navigateTo: 'show'\n        },\n        {\n          image: '/static/icon_exchange.png',\n          text: '兑换',\n          navigateTo: 'exchange'\n        },\n        {\n          image: '/static/icon_guide.png',\n          text: '新手指南',\n          navigateTo: 'guide'\n        }],\n        mescroll: []\n      }\n    },\n    onLoad() {\n      // this.scrolltolower()\n    },\n    methods: {\n      /*下拉刷新的回调 */\n      downCallback(mescroll: any) {\n        // 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\n        this.getAdsList();\n        this.getLastTransactionList();\n        this.getLastTransactionList();\n        this.mescroll = mescroll;\n        mescroll.resetUpScroll();\n      },\n      /*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\n      upCallback(mescroll: any) {\n        //联网加载数据\n        this.getListDataFromNet(mescroll.num,mescroll.size,(curPageData: any) => {\n            //联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n            mescroll.endSuccess(curPageData.length);\n            //设置列表数据\n            console.log(curPageData)\n            if (mescroll.num == 1) this.productListIng = []; //如果是第一页需手动制空列表\n            console.log('productListIng', this.productListIng)\n            this.productListIng = this.productListIng.concat(curPageData); //追加新数据\n          },\n          () => {\n            //联网失败的回调,隐藏下拉刷新的状态\n            mescroll.endErr();\n          }\n        );\n      },\n      /*联网加载列表数据\n        实际项目以您服务器接口返回的数据为准,无需本地处理分页.\n        * */\n      async getListDataFromNet(\n        pageNum: any,\n        pageSize: any,\n        successCallback: any,\n        errorCallback: any\n      ) {\n        console.log(pageNum, pageSize);\n        try {\n          let productListIng: any = await this.getHomeProductListIng(pageNum, pageSize);\n          console.log(\"data\", this.productListIng);\n          //联网成功的回调\n          successCallback && successCallback(productListIng);\n        } catch (e) {\n          //联网失败的回调\n          errorCallback && errorCallback();\n        }\n      },\n      getAdsList() {\n        let data = {\n          AdName: '首页头部轮播'\n        }\n        request(AdsListGet, data).then((res: any) => {\n          console.log(res)\n          this.swiper = res.AdsList[0].AdsViewList\n        })\n      },\n      // 获取最新成交列表\n      getLastTransactionList() {\n        let data = {}\n        request(LastTransactionListGet, data).then((res: any) => {\n          console.log(res)\n          this.LastTranActiveList = res.LastTranActiveList\n          if (res.LastTranActiveList.length >= 2) {\n            this.multiple = 2;\n          }\n        })\n      },\n      // 首页获取正在竞拍与即将开拍的商品列表\n      // 查询类型 : home1=首页的正在竞拍列表, home2=首页的即将开拍列表\n      getHomeProductListIng(pageNum: number, pageSize: number) {\n        return new Promise((sesolve, reject) => {\n\t\t\t\t\tlet data = {\n            PageID: pageNum,\n            PageSize: pageSize,\n            SearchType: 'home2'\n          }\n          request(HomeProductListGet, data).then((res: any) => {\n            console.log(res.ProductList)\n            sesolve(res.ProductList)\n          })\n\t\t\t\t})\n      },\n      noticeList() {\n        navigateTo('../mall/notice/notice')\n      },\n      // grid页面\n      listClick(item: any) {\n        let navigate = `../mall/${item.navigateTo}/${item.navigateTo}`\n        navigateTo(navigate)\n      }\n    }\n\t})\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"home.vue","sourceRoot":"src/pages/index","sourcesContent":["<template>\r\n\t<view>\r\n    <mescroll-uni @down=\"downCallback\" @up=\"upCallback\">\r\n      <view class=\"content\">\r\n        <!-- 轮播 -->\r\n        <view class=\"i-padding-wrap\">\r\n          <view class=\"page-section swiper\">\r\n            <view class=\"page-section-spacing\">\r\n              <swiper\r\n                class=\"swiper-box\"\r\n                :indicator-dots=\"indicatorDots\"\r\n                :autoplay=\"autoplay\"\r\n                :interval=\"interval\"\r\n                :duration=\"duration\"\r\n                :circular=\"circular\"\r\n                :indicator-active-color=\"indicatorActiveColor\"\r\n              >\r\n                <swiper-item v-for=\"(item, index) in swiper\" :key=\"index\">\r\n                  <image :src=\"item.AdPicUrl\" mode=\"aspectFill\" />\r\n                </swiper-item>\r\n              </swiper>\r\n            </view>\r\n          </view>\r\n        </view>\r\n        <!-- 分类导航 -->\r\n        <view class=\"teng-option\">\r\n          <view class=\"teng-options\"></view>\r\n          <view class=\"teng-options-grid\">\r\n            <uni-grid :options=\"list\" :show-border=\"false\" :show-out-border=\"false\" :column-num=\"4\" @click=\"listClick\" />\r\n          </view>\r\n        </view>\r\n        <!-- 滚动公告 -->\r\n        <view class=\"uni-swiper-msg\">\r\n          <view class=\"uni-swiper-msg-icon\">\r\n            <image src=\"/static/icon/icon_notice.png\" mode=\"widthFix\"></image>\r\n          </view>\r\n          <swiper class=\"uni-swiper-wrapper\" vertical=\"true\" autoplay=\"true\" circular=\"true\" interval=\"3000\" :display-multiple-items=\"multiple\">\r\n            <block v-for=\"(item, index) in LastTranActiveList\" :key=\"index\">\r\n              <swiper-item>\r\n                <view class=\"i-item-msg\">\r\n                  <view class=\"teng-notice-content\">恭喜<text class=\"i-notice-original\">{{item.OrderUserNick}}</text>以<text class=\"i-notice-original\">¥{{item.OrderMoney}}</text>元拍得{{item.ProductName}}</view>\r\n                </view>\r\n              </swiper-item>\r\n            </block>\r\n          </swiper>\r\n          <view class=\"notice-more\" @click=\"noticeList\">更多</view>\r\n        </view>\r\n        <!-- 正在竞拍 -->\r\n        <product-list-being :options=\"productListIng\" />\r\n        <!-- 即将开拍 -->\r\n        <product-list :options=\"productListIng\" />\r\n      </view>\r\n    </mescroll-uni>\r\n\t</view>\r\n</template>\r\n<script lang=\"ts\">\r\n  import Vue from 'vue'\r\n  import { request, navigateTo, formatTime } from '@/common/utils/util'\r\n  import { AdsListGet, LastTransactionListGet, HomeProductListGet } from '@/common/config/api'\r\n  import MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\r\n  import uniGrid from '@/components/uni-grid/uni-grid.vue'\r\n  import productList from '@/components/product-list/product-list.vue'\r\n  import productListBeing from '@/components/product-list-being/product-list-being.vue'\r\n  \r\n  export default Vue.extend({\r\n\t\tcomponents: {\r\n      MescrollUni,\r\n      uniGrid,\r\n      productListBeing,\r\n      productList,\r\n    },\r\n    data() {\r\n      return {\r\n        indicatorDots: true,\r\n        autoplay: true,\r\n        interval: 2000,\r\n        duration: 500,\r\n        circular: true,\r\n        indicatorActiveColor: '#fe7f00',\r\n        multiple: 1,\r\n        \r\n        productList: [], // 正在竞拍列表\r\n        productListIng: [], // 即将开拍列表\r\n        productListData: [], // 正在竞拍新列表\r\n        swiperGridHeight: '0px',\r\n        swiperGridWidth: '100%',\r\n        swiper:[],\r\n        LastTranActiveList: [], // 最新成交列表\r\n\r\n        list: [{\r\n          image: '/static/icon_experience.png',\r\n          text: '体验区',\r\n          navigateTo: 'experience'\r\n        },\r\n        {\r\n          image: '/static/icon_show.png',\r\n          text: '晒单',\r\n          navigateTo: 'show'\r\n        },\r\n        {\r\n          image: '/static/icon_exchange.png',\r\n          text: '兑换',\r\n          navigateTo: 'exchange'\r\n        },\r\n        {\r\n          image: '/static/icon_guide.png',\r\n          text: '新手指南',\r\n          navigateTo: 'guide'\r\n        }],\r\n        mescroll: []\r\n      }\r\n    },\r\n    onLoad() {\r\n      // this.scrolltolower()\r\n    },\r\n    methods: {\r\n      /*下拉刷新的回调 */\r\n      downCallback(mescroll: any) {\r\n        // 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\r\n        this.getAdsList();\r\n        this.getLastTransactionList();\r\n        this.getLastTransactionList();\r\n        this.mescroll = mescroll;\r\n        mescroll.resetUpScroll();\r\n      },\r\n      /*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\r\n      upCallback(mescroll: any) {\r\n        //联网加载数据\r\n        this.getListDataFromNet(mescroll.num,mescroll.size,(curPageData: any) => {\r\n            //联网成功的回调,隐藏下拉刷新和上拉加载的状态;\r\n            mescroll.endSuccess(curPageData.length);\r\n            //设置列表数据\r\n            console.log(curPageData)\r\n            if (mescroll.num == 1) this.productListIng = []; //如果是第一页需手动制空列表\r\n            console.log('productListIng', this.productListIng)\r\n            this.productListIng = this.productListIng.concat(curPageData); //追加新数据\r\n          },\r\n          () => {\r\n            //联网失败的回调,隐藏下拉刷新的状态\r\n            mescroll.endErr();\r\n          }\r\n        );\r\n      },\r\n      /*联网加载列表数据\r\n        实际项目以您服务器接口返回的数据为准,无需本地处理分页.\r\n        * */\r\n      async getListDataFromNet(\r\n        pageNum: any,\r\n        pageSize: any,\r\n        successCallback: any,\r\n        errorCallback: any\r\n      ) {\r\n        console.log(pageNum, pageSize);\r\n        try {\r\n          let productListIng: any = await this.getHomeProductListIng(pageNum, pageSize);\r\n          console.log(\"data\", this.productListIng);\r\n          //联网成功的回调\r\n          successCallback && successCallback(productListIng);\r\n        } catch (e) {\r\n          //联网失败的回调\r\n          errorCallback && errorCallback();\r\n        }\r\n      },\r\n      getAdsList() {\r\n        let data = {\r\n          AdName: '首页头部轮播'\r\n        }\r\n        request(AdsListGet, data).then((res: any) => {\r\n          console.log(res)\r\n          this.swiper = res.AdsList[0].AdsViewList\r\n        })\r\n      },\r\n      // 获取最新成交列表\r\n      getLastTransactionList() {\r\n        let data = {}\r\n        request(LastTransactionListGet, data).then((res: any) => {\r\n          console.log(res)\r\n          this.LastTranActiveList = res.LastTranActiveList\r\n          if (res.LastTranActiveList.length >= 2) {\r\n            this.multiple = 2;\r\n          }\r\n        })\r\n      },\r\n      // 首页获取正在竞拍与即将开拍的商品列表\r\n      // 查询类型 : home1=首页的正在竞拍列表, home2=首页的即将开拍列表\r\n      getHomeProductListIng(pageNum: number, pageSize: number) {\r\n        return new Promise((sesolve, reject) => {\r\n\t\t\t\t\tlet data = {\r\n            PageID: pageNum,\r\n            PageSize: pageSize,\r\n            SearchType: 'home2'\r\n          }\r\n          request(HomeProductListGet, data).then((res: any) => {\r\n            console.log(res.ProductList)\r\n            sesolve(res.ProductList)\r\n          })\r\n\t\t\t\t})\r\n      },\r\n      noticeList() {\r\n        navigateTo('../mall/notice/notice')\r\n      },\r\n      // grid页面\r\n      listClick(item: any) {\r\n        let navigate = `../mall/${item.navigateTo}/${item.navigateTo}`\r\n        navigateTo(navigate)\r\n      }\r\n    }\r\n\t})\r\n</script>\r\n\r\n<style scoped>\r\n  .uni-swiper-dots-horizontal {\r\n    position: absolute;\r\n    font-size: 0;\r\n    margin-bottom: 40upx;\r\n    transform-origin:20% 40%;\r\n  }\r\n\r\n  .teng-option {\r\n    background-color: #fff;\r\n  }\r\n\r\n  .teng-options {\r\n    position: relative;\r\n    top: -14upx;\r\n    background-color: #fff;\r\n    padding-top: 28upx;\r\n    border-radius: 50%\r\n  }\r\n\r\n  .teng-options-grid {\r\n    background-color: #fff;\r\n  }\r\n\r\n  .uni-swiper-msg {\r\n    border-top: 2upx solid #f4f4f4;\r\n  }\r\n\r\n  .uni-swiper-wrapper {\r\n    border-left: 2upx solid #f4f4f4;\r\n    padding-left: 20upx;\r\n    position: relative;\r\n  }\r\n\r\n  .i-notice-original {\r\n    color: #fe7f00\r\n  }\r\n\r\n  .notice-more {\r\n    width: 120upx;\r\n    color: #6a6a6a;\r\n    border-left: 4upx solid #f4f4f4;\r\n    padding-left: 20upx;\r\n    z-index: 10;\r\n  }\r\n\r\n  .i-item-msg {\r\n    word-break: break-all;\r\n    display: -webkit-box;\r\n    overflow: hidden;\r\n    line-height:1.5;\r\n    text-overflow: ellipsis;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 1\r\n  }\r\n</style>"]}]}