{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/pages/test/dome.vue?vue&type=style&index=0&id=17d638ec&scoped=true&lang=css&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/pages/test/dome.vue","mtime":1561989147203},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/css-loader/index.js","mtime":1554990705185},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/postcss-loader/src/index.js","mtime":1554990705524},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1561751947145}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimage{width: 100%;}\n.header{z-index: 9900;position: fixed;top: --window-top;left: 0;height: 180upx;background: white;}\n.footer{z-index: 9900;position: fixed;bottom: 0;left: 0;height: 100upx;background: white;}\n",{"version":3,"sources":["dome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA","file":"dome.vue","sourceRoot":"src/pages/test","sourcesContent":["<template>\r\n\t<view>\r\n\t\t<mescroll-uni top=\"0\" bottom=\"0\" @down=\"downCallback\" @up=\"upCallback\">\r\n\t\t\t<!-- 分页的数据列表 -->\r\n\t\t\t<pd-list :list=\"pdList\"></pd-list>\r\n\t\t</mescroll-uni>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\t// 自定义的mescroll-beibei.vue\r\n\timport MescrollUni from \"@/components/mescroll-diy/mescroll-beibei.vue\";\r\n\timport PdList from \"@/components/other/pd-list.vue\";\r\n\t// 模拟数据\r\n\timport mockData from \"@/common/pdlist.js\";\r\n\t\r\n\texport default {\r\n\t\tcomponents: {\r\n\t\t\tMescrollUni,\r\n\t\t\tPdList\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tpdList: [] // 数据列表\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/*下拉刷新的回调 */\r\n\t\t\tdownCallback(mescroll) {\r\n\t\t\t\t// 这里加载你想下拉刷新的数据, 比如刷新轮播数据\r\n\t\t\t\t// loadSwiper();\r\n\t\t\t\t// 下拉刷新的回调,默认重置上拉加载列表为第一页 (自动执行 mescroll.num=1, 再触发upCallback方法 )\r\n\t\t\t\tmescroll.resetUpScroll()\r\n\t\t\t},\r\n\t\t\t/*上拉加载的回调: mescroll携带page的参数, 其中num:当前页 从1开始, size:每页数据条数,默认10 */\r\n\t\t\tupCallback(mescroll) {\r\n\t\t\t\t//联网加载数据\r\n\t\t\t\tthis.getListDataFromNet(mescroll.num, mescroll.size, (curPageData)=>{\r\n\t\t\t\t\t//联网成功的回调,隐藏下拉刷新和上拉加载的状态;\r\n\t\t\t\t\tconsole.log(\"mescroll.num=\" + mescroll.num + \", mescroll.size=\" + mescroll.size + \", curPageData.length=\" + curPageData.length);\r\n\t\t\t\t\tmescroll.endSuccess(curPageData.length);\r\n\r\n\t\t\t\t\t//设置列表数据\r\n\t\t\t\t\tif(mescroll.num == 1) this.pdList = []; //如果是第一页需手动制空列表\r\n\t\t\t\t\tthis.pdList=this.pdList.concat(curPageData); //追加新数据\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t//联网失败的回调,隐藏下拉刷新的状态\r\n\t\t\t\t\tmescroll.endErr();\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t/*联网加载列表数据\r\n\t\t\t在您的实际项目中,请参考官方写法: http://www.mescroll.com/uni.html#tagUpCallback\r\n\t\t\t请忽略getListDataFromNet的逻辑,这里仅仅是在本地模拟分页数据,本地演示用\r\n\t\t\t实际项目以您服务器接口返回的数据为准,无需本地处理分页.\r\n\t\t\t* */\r\n\t\t\tgetListDataFromNet(pageNum,pageSize,successCallback,errorCallback) {\r\n\t\t\t\t//延时一秒,模拟联网\r\n\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t//模拟分页数据\r\n\t\t\t\t\t\tlet listData=[];\r\n\t\t\t\t\t\tfor (let i = (pageNum-1)*pageSize; i < pageNum*pageSize; i++) {\r\n\t\t\t\t\t\t\tif(i==mockData.length) break;\r\n\t\t\t\t\t\t\tlistData.push(mockData[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//联网成功的回调\r\n\t\t\t\t\t\tsuccessCallback && successCallback(listData);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t//联网失败的回调\r\n\t\t\t\t\t\terrorCallback && errorCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t},1000)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\timage{width: 100%;}\r\n\t.header{z-index: 9900;position: fixed;top: --window-top;left: 0;height: 180upx;background: white;}\r\n\t.footer{z-index: 9900;position: fixed;bottom: 0;left: 0;height: 100upx;background: white;}\r\n</style>\r\n"]}]}