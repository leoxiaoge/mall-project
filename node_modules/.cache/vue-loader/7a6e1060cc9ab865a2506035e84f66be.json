{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/components/uParse/src/components/wxParseTemplate0.vue?vue&type=template&id=029165b1&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/components/uParse/src/components/wxParseTemplate0.vue","mtime":1560269787871},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1561751947145},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1561751947145}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-uni-view\",\n    [\n      _vm.node.node == \"element\"\n        ? [\n            _vm.node.tag == \"button\"\n              ? [\n                  _c(\n                    \"v-uni-button\",\n                    { attrs: { type: \"default\", size: \"mini\" } },\n                    [\n                      _vm._l(_vm.node.nodes, function(node, index) {\n                        return [\n                          _c(\"wx-parse-template\", {\n                            key: index + \"_0\",\n                            attrs: { node: node }\n                          })\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                ]\n              : _vm.node.tag == \"li\"\n              ? [\n                  _c(\n                    \"v-uni-view\",\n                    { class: _vm.node.classStr, style: _vm.node.styleStr },\n                    [\n                      _vm._l(_vm.node.nodes, function(node, index) {\n                        return [\n                          _c(\"wx-parse-template\", {\n                            key: index + \"_0\",\n                            attrs: { node: node }\n                          })\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                ]\n              : _vm.node.tag == \"video\"\n              ? [_c(\"wx-parse-video\", { attrs: { node: _vm.node } })]\n              : _vm.node.tag == \"audio\"\n              ? [_c(\"wx-parse-audio\", { attrs: { node: _vm.node } })]\n              : _vm.node.tag == \"img\"\n              ? [_c(\"wx-parse-img\", { attrs: { node: _vm.node } })]\n              : _vm.node.tag == \"a\"\n              ? [\n                  _c(\n                    \"v-uni-view\",\n                    {\n                      class: _vm.node.classStr,\n                      style: _vm.node.styleStr,\n                      attrs: { \"data-href\": _vm.node.attr.href },\n                      on: {\n                        click: function($event) {\n                          $event = _vm.$handleEvent($event)\n                          _vm.wxParseATap($event)\n                        }\n                      }\n                    },\n                    [\n                      _vm._l(_vm.node.nodes, function(node, index) {\n                        return [\n                          _c(\"wx-parse-template\", {\n                            key: index + \"_0\",\n                            attrs: { node: node }\n                          })\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                ]\n              : _vm.node.tag == \"table\"\n              ? [\n                  _c(\n                    \"v-uni-view\",\n                    {\n                      staticClass: \"table\",\n                      class: _vm.node.classStr,\n                      style: _vm.node.styleStr\n                    },\n                    [\n                      _vm._l(_vm.node.nodes, function(node, index) {\n                        return [\n                          _c(\"wx-parse-template\", {\n                            key: index + \"_0\",\n                            attrs: { node: node }\n                          })\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                ]\n              : _vm.node.tag == \"br\"\n              ? [_c(\"v-uni-text\", [_vm._v(\"\\\\n\")])]\n              : [\n                  _c(\n                    \"v-uni-view\",\n                    { class: _vm.node.classStr, style: _vm.node.styleStr },\n                    [\n                      _vm._l(_vm.node.nodes, function(node, index) {\n                        return [\n                          _c(\"wx-parse-template\", {\n                            key: index + \"_0\",\n                            attrs: { node: node }\n                          })\n                        ]\n                      })\n                    ],\n                    2\n                  )\n                ]\n          ]\n        : _vm.node.node == \"text\"\n        ? [_vm._v(_vm._s(_vm.node.text))]\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}