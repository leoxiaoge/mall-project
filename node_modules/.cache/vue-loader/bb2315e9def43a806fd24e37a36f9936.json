{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/components/uParse/src/wxParse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/components/uParse/src/wxParse.vue","mtime":1560269787881},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1560261190995},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1560261190995},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1554990705750},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1560261190995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HtmlToJson from './libs/html2json';\nimport wxParseTemplate from './components/wxParseTemplate0';\n\nexport default {\n  name: 'wxParse',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    className: {\n      type: String,\n      default: '',\n    },\n    content: {\n      type: String,\n      default: '',\n    },\n    noData: {\n      type: String,\n      default: '<div style=\"color: red;\">数据不能为空</div>',\n    },\n    startHandler: {\n      type: Function,\n      default() {\n        return (node) => {\n          node.attr.class = null;\n          node.attr.style = null;\n        };\n      },\n    },\n    endHandler: {\n      type: Function,\n      default: null,\n    },\n    charsHandler: {\n      type: Function,\n      default: null,\n    },\n    imageProp: {\n      type: Object,\n      default() {\n        return {\n          mode: 'aspectFit',\n          padding: 0,\n          lazyLoad: false,\n          domain: '',\n        };\n      },\n    },\n  },\n\tprovide() {\n\t\treturn {\n\t\t\tuparse: this\n\t\t}\n\t},\n  components: {\n    wxParseTemplate,\n  },\n  data() {\n    return {\n      imageUrls: []\n    };\n  },\n  computed: {\n    nodes() {\n      const {\n        content,\n        noData,\n        imageProp,\n        startHandler,\n        endHandler,\n        charsHandler,\n      } = this;\n      const parseData = content || noData;\n      const customHandler = {\n        start: startHandler,\n        end: endHandler,\n        chars: charsHandler,\n      };\n      const results = HtmlToJson(parseData, customHandler, imageProp, this);\n      this.imageUrls = results.imageUrls;\n      return results.nodes;\n    },\n  },\n  methods: {\n    navigate(href, $event) {\n      this.$emit('navigate', href, $event);\n    },\n    preview(src, $event) {\n      if (!this.imageUrls.length) return;\n      wx.previewImage({\n        current: src,\n        urls: this.imageUrls,\n      });\n      this.$emit('preview', src, $event);\n    },\n    removeImageUrl(src) {\n      const { imageUrls } = this;\n      imageUrls.splice(imageUrls.indexOf(src), 1);\n    },\n  },\n};\n",{"version":3,"sources":["wxParse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"wxParse.vue","sourceRoot":"src/components/uParse/src","sourcesContent":["<!--**\n * forked from：https://github.com/F-loat/mpvue-wxParse\n *\n * github地址: https://github.com/dcloudio/uParse\n *\n * for: uni-app框架下 富文本解析\n */-->\n\n<template>\n<!--基础元素-->\n<div class=\"wxParse\" :class=\"className\" v-if=\"!loading\">\n  <block v-for=\"(node,index) of nodes\" :key=\"index\">\n    <wxParseTemplate :node=\"node\" />\n  </block>\n</div>\n</template>\n\n<script>\nimport HtmlToJson from './libs/html2json';\nimport wxParseTemplate from './components/wxParseTemplate0';\n\nexport default {\n  name: 'wxParse',\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    className: {\n      type: String,\n      default: '',\n    },\n    content: {\n      type: String,\n      default: '',\n    },\n    noData: {\n      type: String,\n      default: '<div style=\"color: red;\">数据不能为空</div>',\n    },\n    startHandler: {\n      type: Function,\n      default() {\n        return (node) => {\n          node.attr.class = null;\n          node.attr.style = null;\n        };\n      },\n    },\n    endHandler: {\n      type: Function,\n      default: null,\n    },\n    charsHandler: {\n      type: Function,\n      default: null,\n    },\n    imageProp: {\n      type: Object,\n      default() {\n        return {\n          mode: 'aspectFit',\n          padding: 0,\n          lazyLoad: false,\n          domain: '',\n        };\n      },\n    },\n  },\n\tprovide() {\n\t\treturn {\n\t\t\tuparse: this\n\t\t}\n\t},\n  components: {\n    wxParseTemplate,\n  },\n  data() {\n    return {\n      imageUrls: []\n    };\n  },\n  computed: {\n    nodes() {\n      const {\n        content,\n        noData,\n        imageProp,\n        startHandler,\n        endHandler,\n        charsHandler,\n      } = this;\n      const parseData = content || noData;\n      const customHandler = {\n        start: startHandler,\n        end: endHandler,\n        chars: charsHandler,\n      };\n      const results = HtmlToJson(parseData, customHandler, imageProp, this);\n      this.imageUrls = results.imageUrls;\n      return results.nodes;\n    },\n  },\n  methods: {\n    navigate(href, $event) {\n      this.$emit('navigate', href, $event);\n    },\n    preview(src, $event) {\n      if (!this.imageUrls.length) return;\n      wx.previewImage({\n        current: src,\n        urls: this.imageUrls,\n      });\n      this.$emit('preview', src, $event);\n    },\n    removeImageUrl(src) {\n      const { imageUrls } = this;\n      imageUrls.splice(imageUrls.indexOf(src), 1);\n    },\n  },\n};\n</script>\n"]}]}