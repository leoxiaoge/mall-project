{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/pages/mall/productDetailsPage/productDetailsPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/pages/mall/productDetailsPage/productDetailsPage.vue","mtime":1563910998860},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/babel-loader/lib/index.js","mtime":1560261191357},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/ts-loader/index.js","mtime":1560261210667},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1563798333387},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1563798331564}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {\n\trequest,\n\tnavigateTo,\n\tformatTime,\n\tshowToast,\n\tshowModal\n} from \"@/common/utils/util\";\nimport {\n\tProductGet,\n\tPastTransactionsListGet,\n\tOrderDryingListGet,\n\tGetActiveByID\n} from \"@/common/config/api\";\nimport iPast from \"@/components/i-past/i-past.vue\";\nimport iShow from \"@/components/i-show/i-show.vue\";\nimport iRule from \"@/components/i-rule/i-rule.vue\";\nimport iPopup from \"@/components/i-popup/i-popup.vue\";\nimport productTable from \"@/components/product-table/product-table.vue\";\nlet socketOpen: boolean = false;\nlet socketMsgQueue: any = [];\nexport default Vue.extend({\n\tcomponents: {\n\t\tiPast,\n\t\tiShow,\n\t\tiRule,\n\t\tiPopup,\n\t\tproductTable\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tindicatorDots: true,\n\t\t\tautoplay: true,\n\t\t\tinterval: 2000,\n\t\t\tduration: 500,\n\t\t\tcircular: true,\n\t\t\tindicatorActiveColor: \"#fe7f00\",\n\t\t\tdisabled: false, // 按钮disabled\n\n\t\t\tswiper: [],\n\t\t\ttitle: \"服务\",\n\t\t\tid: \"\",\n\t\t\tproduct: \"\",\n\t\t\tnum: \"1\", // 剩余次数\n\n\t\t\tactiveDetail: \"\", // 活动详情\n\t\t\tactive: {}, // 活动内容\n\n\t\t\ttabIndex: 0, // 默认往期成交\n\t\t\tpastList: [], // 往期成交列表\n\t\t\tshowList: [], // 晒单列表\n\t\t\truleList: \"\", // 竞拍规则\n\t\t\tshow: false, // 显示弹窗\n\n\t\t\tlabel: [\"零风险\", \"正品承诺\", \"极速发货\", \"公平公正\"],\n\t\t\ttab: [\"往期成交\", \"分享晒单\", \"竞拍规则\"],\n\t\t\tsrc: \"/static/icon_experience.png\",\n\t\t\tleading: \"/static/icon/icon_leading.png\",\n\n\t\t\tActiveID: \"\",\n\t\t\tPrice: \"\",\n\t\t\tmsgID: \"\",\n\t\t\tmsgType: \"\",\n\t\t\ttimer: 0,\n\t\t\tbuttonsList: [], // 按钮类型，0表示报名按钮、1表示举牌按钮、2表示托管按钮、3表示填写地址按钮，4表示参与下一期按钮\n\t\t\tprice: \"\", // 最新价格\n\t\t\tallBills: \"\", // 全部举牌次数\n\t\t\tlastBills: [], // 出价列表\n\t\t\ttimerDurationTitle: \"\", // 状态对应要显示的标题\n\t\t\tonTimerStatus: \"\", // 活动通知\n\t\t\tOnTimerDowns: \"\", // 成交通知\n\n\t\t\tseq: \"\", // 更新我的剩余举牌次数\n\t\t\tMyBills: \"\", // 举牌响应消息（包含我的举牌次数、剩余可用次数）\n\t\t\tSeqBills: \"\", // 举牌响应消息（剩余可用次数）\n\t\t\tSignups: \"\", // 报名份数\n\t\t\tSeqSignups: \"\", // 剩下报名份数\n\t\t\tmySeqBills: \"\", // 我的出价记录\n\t\t\tUserID: \"\", // 登录成功，提示用户\n\t\t\ttapbtn: \"\", // 托管\n\t\t\tBillStat: \"\", // 总举牌次数\n\t\t\tnewPrice: \"\", // 领先价格\n\t\t\tnewBill: \"\", // 领先人全部信息\n\t\t\tnewNick: \"\", // 当前领先人\n\t\t\tnewFace: \"\", // 当前领先人头像\n\t\t\tnewCity: \"\", // 当前领先人所在城市\n\t\t\tlastbills: [], // 出局列表\n\t\t\ttimes: \"\", // 倒计时\n\t\t\tseqTime: new Date() // 初始Date时间\n\t\t};\n\t},\n\tonLoad(options: any) {\n\t\tconsole.log(\"options\", options);\n\t\tthis.id = options.id;\n\t\tthis.ActiveID = options.activeID;\n\t\tthis.websocket();\n\t},\n\tonShow() {\n\t\tthis.UserID = uni.getStorageSync(\"UserInfo\").ID;\n\t\tthis.getProduct();\n\t\tthis.getActiveByID();\n\t\tthis.getPastTransactionsList();\n\t\tthis.getOrderDryingList();\n\t},\n\tonUnload() {\n\t\tuni.closeSocket();\n\t},\n\tonPullDownRefresh() {\n\t\tthis.websocket();\n\t\tthis.getProduct();\n\t\tthis.getActiveByID();\n\t\tthis.getPastTransactionsList();\n\t\tthis.getOrderDryingList();\n\t},\n\tmethods: {\n\t\t// 获取产品详情\n\t\tgetProduct() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(ProductGet, data).then((res: any) => {\n\t\t\t\tconsole.log(\"Product\", res);\n\t\t\t\tthis.product = res.Product;\n\t\t\t\tthis.swiper = res.Product.ProductPicList;\n\t\t\t\tthis.Price = res.Product.ProductPrice;\n\t\t\t});\n\t\t},\n\t\t// 获取活动详情\n\t\tgetActiveByID() {\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet data = {\n\t\t\t\tActiveID: ActiveID\n\t\t\t};\n\t\t\trequest(GetActiveByID, data).then((res: any) => {\n\t\t\t\tconsole.log(\"活动详情\", res);\n\t\t\t\tthis.activeDetail = res.ActiveDetail;\n\t\t\t\tthis.active = res.ActiveDetail.Active;\n\t\t\t});\n\t\t},\n\t\t// 选项卡\n\t\ttabClick(index: number) {\n\t\t\tthis.tabIndex = index;\n\t\t},\n\t\t// 往期成交列表\n\t\tgetPastTransactionsList() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(PastTransactionsListGet, data).then((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tlet pastList = res.OrderList;\n\t\t\t\tpastList.map((item: any) => {\n\t\t\t\t\titem.percentage = (\n\t\t\t\t\t\t(item.OrderMoneys / item.OrderPrimeCost) *\n\t\t\t\t\t\t100\n\t\t\t\t\t).toFixed(2);\n\t\t\t\t});\n\t\t\t\tthis.pastList = pastList;\n\t\t\t});\n\t\t},\n\t\tchange(val: any) {\n\t\t\tconsole.log(val);\n\t\t\tthis.num = val;\n\t\t},\n\t\thidePopup() {\n\t\t\tthis.show = !this.show;\n\t\t},\n\t\ttolowerShow(e: any) {\n\t\t\tconsole.log('tolowerShow', e)\n\t\t},\n\t\t// 获取用户晒单列表\n\t\tgetOrderDryingList() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(OrderDryingListGet, data).then((res: any) => {\n\t\t\t\tthis.showList = res.OrderList;\n\t\t\t});\n\t\t},\n\t\tactivePath() {\n\t\t\tlet id = this.id;\n\t\t\tnavigateTo(\"../activeBilList/activeBilList?id=\" + id);\n\t\t},\n\t\tproductDetailsUparsePath() {\n\t\t\tlet id = this.id;\n\t\t\tnavigateTo(\"../productDetailsUparse/productDetailsUparse?id=\" + id);\n\t\t},\n\t\twebsocket() {\n\t\t\tuni.connectSocket({\n\t\t\t\turl: \"wss://websocket.tengpaisc.com:8888/\"\n\t\t\t});\n\t\t\tuni.onSocketOpen((res: any) => {\n\t\t\t\tconsole.log(\"WebSocket连接已打开！\");\n\t\t\t\tsocketOpen = true;\n\t\t\t\tfor (let i = 0; i < socketMsgQueue.length; i++) {\n\t\t\t\t\tthis.sendSocketMessage(socketMsgQueue[i]);\n\t\t\t\t}\n\t\t\t\tsocketMsgQueue = [];\n\t\t\t\tthis.msgSubscribe();\n\t\t\t\tthis.reqLogin();\n\t\t\t});\n\t\t\tuni.onSocketError(res => {\n\t\t\t\tconsole.log(\"WebSocket连接打开失败，请检查！\");\n\t\t\t});\n\t\t\tthis.onSocketMessage();\n\t\t},\n\t\tsendSocketMessage(msg: any) {\n\t\t\tlet data: string = JSON.stringify(msg);\n\t\t\tconsole.log(\"发送数据\", socketOpen, msg);\n\t\t\tif (socketOpen) {\n\t\t\t\tuni.sendSocketMessage({\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocketMsgQueue.push(msg);\n\t\t\t}\n\t\t},\n\t\tonSocketMessage() {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tuni.onSocketMessage((res: any) => {\n\t\t\t\t\tconsole.log(\"收到服务器内容：\" + res.data);\n\t\t\t\t\tlet msg = JSON.parse(res.data);\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t\tthis.proccessMsg();\n\t\t\t\t\tsesolve(msg);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t// 向服务器发送登录请求\n\t\tasync reqLogin() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tconst Appkey = \"3957399\";\n\t\t\tconst SessionKey = uni.getStorageSync(\"SessionKey\");\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet UserID = this.UserID;\n\t\t\tlet ConnectionState = false;\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet reqLogin: any = {\n\t\t\t\tActiveID: ActiveID,\n\t\t\t\tAppKey: Appkey,\n\t\t\t\tSessionKey: SessionKey,\n\t\t\t\tmsgID: GUID,\n\t\t\t\tmsgType: 3,\n\t\t\t\tmsgTime: msgTime\n\t\t\t};\n\t\t\tthis.sendSocketMessage(reqLogin);\n\t\t},\n\t\t// 发送对该活动的消息订阅\n\t\tasync msgSubscribe() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet url = \"/Actives/\" + ActiveID + \"/\";\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet reqSubscribe = {\n\t\t\t\tSubscribe: url,\n\t\t\t\tmsgID: GUID,\n\t\t\t\tmsgType: 0,\n\t\t\t\tmsgTime: msgTime\n\t\t\t};\n\t\t\tthis.sendSocketMessage(reqSubscribe);\n\t\t},\n\t\t// 处理消息的函数，用于解析从服务器webSocket收到的各种消息\n\t\tasync proccessMsg() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet dt = new Date();\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet msg: any = await this.onSocketMessage();\n\t\t\tlet msgType = msg.msgType;\n\t\t\tthis.msgType = msgType;\n\t\t\tconsole.log(msgType);\n\t\t\ttry {\n\t\t\t\tswitch (msgType) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t// 订阅响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"订阅失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t// 报名响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"报名失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", true, true);\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 更新我的剩余举牌次数\n\t\t\t\t\t\tthis.seq = `剩余举牌次数：${msg.SeqBills}次，已报名份数：${msg.Signups}份，还可报名：${msg.SeqSignups}`;\n\t\t\t\t\t\tthis.SeqBills = msg.SeqBills;\n\t\t\t\t\t\tthis.Signups = msg.Signups;\n\t\t\t\t\t\tthis.SeqSignups = msg.SeqSignups;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t// 举牌响应消息（包含我的举牌次数、剩余可用次数）\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MyBills = msg.MyBills;\n\t\t\t\t\t\t\tthis.SeqBills = msg.SeqBills;\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t// 登录响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"登录失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 登录成功，提示用户\n\t\t\t\t\t\t\tthis.UserID = msg.UserID;\n\t\t\t\t\t\t\tlet initMsg = {\n\t\t\t\t\t\t\t\tActiveID: this.ActiveID,\n\t\t\t\t\t\t\t\tUserID: this.UserID,\n\t\t\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\t\t\tmsgType: 6,\n\t\t\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.sendSocketMessage(initMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\t// 托管响应\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t\tshowToast(\"托管失败!\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"取消托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\t// 取消托管响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"取消托管\", \"2\", true, true);\n\t\t\t\t\t\t\tshowToast(\"取消托管失败!\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\t// 活动详情页初始化响应\n\t\t\t\t\t\tthis.timerDurationTitle = msg.TimerDurationTitle; // 状态对应要显示的标题\n\t\t\t\t\t\t// 倒计时显示文本\n\t\t\t\t\t\t// 判断是否需要倒计时，如果不需要则清除倒计时器\n\t\t\t\t\t\tif (msg.TimerDurationValue === 0) {\n\t\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet tm = dt.getTime() + msg.TimerDurationValue;\n\t\t\t\t\t\t\tthis.seqTime.setTime(tm);\n\t\t\t\t\t\t\tthis.timerState(this.seqTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 处理按钮的初始状态列表\n\t\t\t\t\t\tthis.buttonsList = msg.ButtonsList;\n\t\t\t\t\t\t// 更新最近出价人列表信息，更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\t\t\t\tthis.onPriceUpdateEvent(msg.Price, msg.AllBills, msg.LastBills);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\t// 报名进度更新推送\n\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tif (msg.AllSignups === msg.MaxSignups) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t\t// 已满员，隐藏掉报名按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\t// 还需要继续报名，显示报名按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"3\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\t// 价格更新通知\n\t\t\t\t\t\tshowToast(\"价格已更新......！\");\n\t\t\t\t\t\t// 更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\t\t\t\tthis.BillStat = \"总举牌次数：\" + msg.AllBills + \"次\";\n\t\t\t\t\t\t// 更新最后出价人信息\n\t\t\t\t\t\tif (msg.Bills.length > 0) {\n\t\t\t\t\t\t\tthis.newPrice = `￥${msg.Bills[0].Price}`;\n\t\t\t\t\t\t\tthis.newBill = msg.Bills[0].bill;\n\t\t\t\t\t\t\tthis.newFace = msg.Bills[0].bill.face;\n\t\t\t\t\t\t\tthis.newNick = `领先人：${msg.Bills[0].nick}`;\n\t\t\t\t\t\t\t// 计算剩余时长\n\t\t\t\t\t\t\tlet dt = new Date();\n\t\t\t\t\t\t\tlet tm = dt.getTime() + msg.SeqMiniSecounds;\n\t\t\t\t\t\t\tthis.seqTime.setTime(tm);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 更新最近出局人信息\n\t\t\t\t\t\tif (msg.Bills.length > 1) {\n\t\t\t\t\t\t\tthis.lastbills = msg.Bills;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 判断是否需要启动计时器，如果只有一个出价，肯定就是需要启动的，因为计时器未启动\n\t\t\t\t\t\tif (msg.Bills.length === 1) {\n\t\t\t\t\t\t\tthis.timerState(this.seqTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\t//计算剩余时间，并重置剩余时间\n\t\t\t\t\t\tlet dt_time = dt.getTime();\n\t\t\t\t\t\tthis.seqTime.setTime(dt_time + msg.SeqMiniSecounds);\n\t\t\t\t\t\tconsole.log(this.seqTime);\n\t\t\t\t\t\t// 设置倒计时标题为即将开拍\n\t\t\t\t\t\tthis.timerDurationTitle = \"开拍准备\";\n\t\t\t\t\t\t// 隐藏掉报名按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t// 禁用举牌、托管按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"1\", true, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"自动举牌中\", \"2\", true, false);\n\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\t// 活动正式开始，但是目前尚未有人出价，所以收到此消息，先停止计时器，并显示为 “等待先手”\n\t\t\t\t\t\tthis.times = \"等待首牌\";\n\t\t\t\t\t\t// 清除计时器\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\t// 设置价格\n\t\t\t\t\t\tthis.newPrice = \"￥\" + msg.currPrice;\n\t\t\t\t\t\t// 判断活动类型，如果是人工举牌，显示托管、举牌；如果是自动举牌，举牌按钮更改为“自动举牌中”，其它按钮全部隐藏\n\t\t\t\t\t\tif (msg.ActiveType === 0) {\n\t\t\t\t\t\t\t// 停用其它按钮，仅剩下举牌按钮，且举牌按钮状态显示为自动举牌中\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"自动举牌中\", \"1\", true, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 启用举牌、托管按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 隐藏掉报名、填写地址、参与下一期按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\t// 活动结束通知\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\tthis.times = \"已成交\";\n\t\t\t\t\t\t// 判断是否当前用户，如果是当前用户，则需要弹出收货地址和订单信息处理界面\n\t\t\t\t\t\tif (this.UserID === msg.WinsBill.UserID) {\n\t\t\t\t\t\t\t// 当前用户\n\t\t\t\t\t\t\tshowToast(\"恭喜，您已中拍！点击确定去填写订单信息吧！\");\n\t\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\t\t// 触发填写地址按钮的显示，其它按钮隐藏\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", true, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 隐藏掉其它按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\t\t// 触发下一期按钮的显示，其它按钮隐藏\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\t// 活动流拍通知\n\t\t\t\t\t\tthis.onTimerStatus = \"活动流拍\";\n\t\t\t\t\t\tthis.OnTimerDowns = \"-\";\n\t\t\t\t\t\t// 隐藏掉其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\t// 触发下一期按钮的显示，其它按钮隐藏\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", true, true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\"处理消息出错：\");\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t},\n\n\t\t// 定义按钮处理函数\n\t\tbuttonStateChanged(text: any, type: any, isDisplay: any, isEnabled: any) {\n\t\t\tthis.buttonsList.map((item: any, i: any, value: any) => {\n\t\t\t\tvalue[type].ButtonText = text;\n\t\t\t\tvalue[type].ButtonVisibility = isDisplay;\n\t\t\t\tvalue[type].ButtonEnabled = isEnabled;\n\t\t\t});\n\t\t},\n\n\t\t// 更新价格事件\n\t\tonPriceUpdateEvent(startPrice: any, allBills: any, lastBills: any) {\n\t\t\t// 更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\tthis.allBills = allBills; // '活动总举牌次数：' + allBills + '次'\n\t\t\tif (lastBills.length > 0) {\n\t\t\t\t// 有人出价，按最后出价人\n\t\t\t\tthis.newPrice = `￥${lastBills[0].bill.Price}`;\n\t\t\t\tthis.newBill = lastBills[0].bill;\n\t\t\t\tthis.newFace = lastBills[0].face;\n\t\t\t\tthis.newNick = `领先人：${lastBills[0].nick}`;\n\t\t\t\tthis.newCity = `${lastBills[0].bill.Province} ${lastBills[0].bill.City}`;\n\t\t\t} else {\n\t\t\t\t// 未有人出价，按起拍价\n\t\t\t\tthis.newPrice = `￥${startPrice}`;\n\t\t\t}\n\t\t\t// 更新最近出局人信息\n\t\t\tif (lastBills.length > 1) {\n\t\t\t\tthis.lastBills = lastBills;\n\t\t\t}\n\t\t},\n\t\tasync billTap(type: any) {\n\t\t\tlet action = type;\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet num = this.num;\n\t\t\tlet Price = this.Price;\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tconsole.log(\"switch\", type);\n\t\t\tswitch (action) {\n\t\t\t\tcase \"报名\":\n\t\t\t\t\tlet SignupMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tShares: num,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 1,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(SignupMsg);\n\t\t\t\t\tthis.show = !this.show;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"举牌\":\n\t\t\t\t\tlet billMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tPrice: Price,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 2,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(billMsg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"托管\":\n\t\t\t\t\tlet tapMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 4,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(tapMsg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"取消托管\":\n\t\t\t\t\tlet cancelTapMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 5,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(cancelTapMsg);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t// 下面处理倒计时的显示，实际上时间是由服务器webSocket返回的\n\t\tseqDisplay() {\n\t\t\tlet seqTime: any = this.seqTime;\n\t\t\tlet date: any = new Date();\n\t\t\tlet between: number = seqTime - date;\n\t\t\tlet sec: number = Math.floor(between / 1000);\n\t\t\tlet hours: any = Math.floor(Math.floor(sec / 60) / 60) % 24;\n\t\t\tlet days = Math.floor(Math.floor(Math.floor(sec / 60) / 60) / 24) % 30;\n\t\t\tlet minutes: any = Math.floor(sec / 60) % 60;\n\t\t\tlet seconds: any = sec % 60;\n\t\t\tlet minisec: number = Math.floor(between / 100) % 10;\n\t\t\tif (seconds <= 0) {\n\t\t\t\tthis.times = \"\";\n\t\t\t} else {\n\t\t\t\tif (hours < 10) {\n\t\t\t\t\thours = \"0\" + hours;\n\t\t\t\t}\n\t\t\t\tif (minutes < 10) {\n\t\t\t\t\tminutes = \"0\" + minutes;\n\t\t\t\t}\n\t\t\t\tif (seconds < 10) {\n\t\t\t\t\tseconds = \"0\" + seconds;\n\t\t\t\t}\n\t\t\t\tlet times =\n\t\t\t\t\t(days > 0 ? days + \"天\" : \"\") +\n\t\t\t\t\thours +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tminutes +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tseconds +\n\t\t\t\t\t\".\" +\n\t\t\t\t\tminisec;\n\t\t\t\tthis.times = times;\n\t\t\t}\n\t\t},\n\t\t// 倒计时\n\t\ttimerState(type: any) {\n\t\t\tif (type === null) {\n\t\t\t\tclearInterval(this.timer);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(type instanceof Date)) {\n\t\t\t\tconsole.error(\"传入日期时间格式不正确！\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (type.getTime() < new Date().getTime()) {\n\t\t\t\t// 时间错误，时间必须是未来的日期时间\n\t\t\t\tconsole.error(\"设置倒计时器无效，日期时间必须是未来的时间！\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// 清除旧的倒计时器\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = setInterval(() => {\n\t\t\t\tthis.seqDisplay();\n\t\t\t}, 100);\n\t\t},\n\t\t// 下面是生成随机GUID的函数\n\t\tGUID() {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tlet guid = \"\";\n\t\t\t\tfor (let i = 1; i <= 32; i++) {\n\t\t\t\t\tlet n = Math.floor(Math.random() * 16.0).toString(16);\n\t\t\t\t\tguid += n;\n\t\t\t\t\tif (i == 8 || i == 12 || i == 16 || i == 20) guid += \"-\";\n\t\t\t\t}\n\t\t\t\tsesolve(guid);\n\t\t\t});\n\t\t}\n\t}\n});\n",{"version":3,"sources":["productDetailsPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"productDetailsPage.vue","sourceRoot":"src/pages/mall/productDetailsPage","sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 轮播 -->\n\t\t<view class=\"i-padding-wrap\">\n\t\t\t<view class=\"page-section swiper\">\n\t\t\t\t<view class=\"page-section-spacing\">\n\t\t\t\t\t<swiper\n\t\t\t\t\t\tclass=\"swiper-box\"\n\t\t\t\t\t\t:indicator-dots=\"indicatorDots\"\n\t\t\t\t\t\t:autoplay=\"autoplay\"\n\t\t\t\t\t\t:interval=\"interval\"\n\t\t\t\t\t\t:duration=\"duration\"\n\t\t\t\t\t\t:circular=\"circular\"\n\t\t\t\t\t\t:indicator-active-color=\"indicatorActiveColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<swiper-item v-for=\"(item, index) in swiper\" :key=\"index\">\n\t\t\t\t\t\t\t<image :src=\"item\" mode=\"aspectFill\" />\n\t\t\t\t\t\t</swiper-item>\n\t\t\t\t\t</swiper>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<!-- 标签 -->\n\t\t<view class=\"i-label\">\n\t\t\t<view class=\"i-label-item\" v-for=\"(item, index) in label\" :key=\"index\">\n\t\t\t\t<view class=\"i-point\"></view>\n\t\t\t\t<view class=\"i-label-item-text\">{{item}}</view>\n\t\t\t\t<view class=\"i-point\"></view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-head\">\n\t\t\t<view class=\"i-product-title\">{{product.ProductTitle}}</view>\n\t\t\t<view class=\"i-product-name\">{{product.ProductName}}</view>\n\t\t</view>\n\t\t<view v-if=\"active.PrevActiveMoney\">\n\t\t\t<view class=\"i-product-last-transaction\">\n\t\t\t\t<view class=\"i-product-status\">{{active.ActiveTypeName}}</view>\n\t\t\t\t<view class=\"i-product-last-transaction-content\">\n\t\t\t\t\t<view class=\"i-product-last-transaction-text\">上期成交：</view>\n\t\t\t\t\t<view class=\"i-product-last-transaction-price\">¥{{active.PrevActiveMoney}}</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-distance-shooting\">\n\t\t\t<view class=\"i-product-distance-shooting-text\">{{timerDurationTitle}}</view>\n\t\t\t<view class=\"i-product-line\" v-if=\"times\"></view>\n\t\t\t<view class=\"i-product-distance-shooting-time\">{{times}}</view>\n\t\t</view>\n\t\t<view class=\"i-product-current-bid\">\n\t\t\t<view class=\"i-product-current-bid-head\">当前出价</view>\n\t\t\t<view class=\"i-product-current-bid-price\">{{newPrice}}</view>\n\t\t\t<view class=\"i-product-current-bid-icon\">\n\t\t\t\t<img :src=\"leading\" />\n\t\t\t\t<text>当前领先出价人</text>\n\t\t\t</view>\n\t\t\t<view class=\"i-product-current-bid-user\">\n\t\t\t\t<img :src=\"newFace\" />\n\t\t\t\t<view class=\"i-product-current-bid-name\">{{newNick}}</view>\n\t\t\t\t<view class=\"i-product-current-bid-address\">{{newCity}}</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-bill\">\n\t\t\t<view\n\t\t\t\tclass=\"i-bill\"\n\t\t\t\t:class=\"(item.IsWin === 0?'':'i-active')\"\n\t\t\t\tv-for=\"(item, index) in lastbills\"\n\t\t\t\t:key=\"index\"\n\t\t\t>\n\t\t\t\t<view class=\"i-bill-image i-flex\">\n\t\t\t\t\t<image :src=\"item.UserNick\" />\n\t\t\t\t\t<view class=\"i-bill-user\">{{item.UserMobile}}</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"i-bill-IsWin i-bill-out\" v-if=\"item.IsWin === 0\">出局{{item.bill.Province}}</view>\n\t\t\t\t<view class=\"i-bill-IsWin i-bill-pre\" v-else>预选</view>\n\t\t\t\t<view class=\"i-bill-province\">{{item.Province}}{{item.City}}</view>\n\t\t\t\t<view class=\"i-bill-price\">{{item.Price}}</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-all-bill uni-list-cell-navigate uni-navigate-right\" @click=\"activePath\">\n\t\t\t<view class=\"i-product-all-bill-text\">\n\t\t\t\t<view class=\"i-product-all-bill-records\">全部出价记录</view>\n\t\t\t\t<view class=\"i-product-all-bill-length\">\n\t\t\t\t\t<text class=\"i-product-all-bill-text-item\">{{allBills}}</text>\n\t\t\t\t\t<text class=\"i-product-all-bill-text-total\">条</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-all-bill uni-list-cell-navigate uni-navigate-right\" @click=\"activePath\">\n\t\t\t<view class=\"i-product-all-bill-text\">\n\t\t\t\t<view class=\"i-product-all-bill-records\">我的出价记录</view>\n\t\t\t\t<view class=\"i-product-all-bill-length\">\n\t\t\t\t\t<text class=\"i-product-all-bill-text-item\">{{mySeqBills}}</text>\n\t\t\t\t\t<text class=\"i-product-all-bill-text-total\">条</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"i-product-table\">\n\t\t\t<product-table :options=\"active\" />\n\t\t</view>\n\t\t<view\n\t\t\tclass=\"i-product-details uni-list-cell-navigate uni-navigate-right\"\n\t\t\t@click=\"productDetailsUparsePath\"\n\t\t>\n\t\t\t<view class=\"i-product-details-text\">商品详情</view>\n\t\t</view>\n\t\t<view class=\"i-product-tab-content\">\n\t\t\t<view class=\"i-product-tab\">\n\t\t\t\t<view class=\"i-product-tab-item\">\n\t\t\t\t\t<view\n\t\t\t\t\t\tclass=\"i-product-tab-item-tab\"\n\t\t\t\t\t\t:class=\"(tabIndex === index?'i-active':'')\"\n\t\t\t\t\t\tv-for=\"(item, index) in tab\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t@click=\"tabClick(index)\"\n\t\t\t\t\t>{{item}}</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"i-product-tab-line\"></view>\n\t\t\t</view>\n\t\t\t<view class=\"components\">\n\t\t\t\t<scroll-view v-if=\"tabIndex === 0\" scroll-y @scrolltolower=\"tolowerPast\">\n\t\t\t\t\t<i-past :options=\"pastList\" />\n\t\t\t\t</scroll-view>\n\t\t\t\t<scroll-view v-else-if=\"tabIndex === 1\" scroll-y @scrolltolower=\"tolowerShow\">\n\t\t\t\t\t<i-show :options=\"showList\" />\n\t\t\t\t</scroll-view>\n\t\t\t\t<view v-else>\n\t\t\t\t\t<i-rule :options=\"ruleList\" />\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"kong\"></view>\n\t\t<view class=\"i-product-join\">\n\t\t\t<view class=\"i-product-button-list\">\n\t\t\t\t<block v-for=\"(item, index) in buttonsList\" :key=\"index\">\n\t\t\t\t\t<block v-if=\"item.ButtonType === 0 && item.ButtonVisibility\">\n\t\t\t\t\t\t<button class=\"btn join-btn\" v-show=\"!show\" @click.stop.prevent=\"hidePopup\">立即参与</button>\n\t\t\t\t\t\t<i-popup\n\t\t\t\t\t\t\t:disabled=\"item.ButtonEnabled\"\n\t\t\t\t\t\t\t:show=\"show\"\n\t\t\t\t\t\t\t:num=\"SeqBills\"\n\t\t\t\t\t\t\t@change=\"change\"\n\t\t\t\t\t\t\t@hidePopup=\"hidePopup\"\n\t\t\t\t\t\t\t@click.stop.prevent=\"billTap(item.ButtonText)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</block>\n\t\t\t\t\t<block v-if=\"item.ButtonType === 1 && item.ButtonVisibility\">\n\t\t\t\t\t\t<view class=\"i-product-placad\">\n\t\t\t\t\t\t\t<view class=\"i-placard-remaining-num\">\n\t\t\t\t\t\t\t\t<view class=\"i-placard-remaining\">剩余次数：</view>\n\t\t\t\t\t\t\t\t<view class=\"i-placard-num\">{{SeqBills}}</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"i-placard-button-view\">\n\t\t\t\t\t\t\t\t<view class=\"i-placard-button\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"btn\"\n\t\t\t\t\t\t\t\t\t\t:disabled=\"!item.ButtonEnabled\"\n\t\t\t\t\t\t\t\t\t\t@click.stop.prevent=\"billTap(item.ButtonText)\"\n\t\t\t\t\t\t\t\t\t>{{item.ButtonText}}</button>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</block>\n\t\t\t\t\t<block v-if=\"item.ButtonType === 2 && item.ButtonVisibility\">\n\t\t\t\t\t\t<view class=\"i-placard-button i-placard-active\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"btn\"\n\t\t\t\t\t\t\t\t:disabled=\"!item.ButtonEnabled\"\n\t\t\t\t\t\t\t\t@click.stop.prevent=\"billTap(item.ButtonText)\"\n\t\t\t\t\t\t\t>{{item.ButtonText}}</button>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</block>\n\t\t\t\t\t<block v-if=\"item.ButtonType === 3 && item.ButtonVisibility\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"btn join-btn\"\n\t\t\t\t\t\t\t:disabled=\"!item.ButtonEnabled\"\n\t\t\t\t\t\t\t@click.stop.prevent=\"billTap(item.ButtonText)\"\n\t\t\t\t\t\t>{{item.ButtonText}}</button>\n\t\t\t\t\t</block>\n\t\t\t\t\t<block v-if=\"item.ButtonType === 4 && item.ButtonVisibility\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"btn join-btn\"\n\t\t\t\t\t\t\t:disabled=\"!item.ButtonEnabled\"\n\t\t\t\t\t\t\t@click.stop.prevent=\"billTap(item.ButtonText)\"\n\t\t\t\t\t\t>{{item.ButtonText}}</button>\n\t\t\t\t\t</block>\n\t\t\t\t</block>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport {\n\trequest,\n\tnavigateTo,\n\tformatTime,\n\tshowToast,\n\tshowModal\n} from \"@/common/utils/util\";\nimport {\n\tProductGet,\n\tPastTransactionsListGet,\n\tOrderDryingListGet,\n\tGetActiveByID\n} from \"@/common/config/api\";\nimport iPast from \"@/components/i-past/i-past.vue\";\nimport iShow from \"@/components/i-show/i-show.vue\";\nimport iRule from \"@/components/i-rule/i-rule.vue\";\nimport iPopup from \"@/components/i-popup/i-popup.vue\";\nimport productTable from \"@/components/product-table/product-table.vue\";\nlet socketOpen: boolean = false;\nlet socketMsgQueue: any = [];\nexport default Vue.extend({\n\tcomponents: {\n\t\tiPast,\n\t\tiShow,\n\t\tiRule,\n\t\tiPopup,\n\t\tproductTable\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tindicatorDots: true,\n\t\t\tautoplay: true,\n\t\t\tinterval: 2000,\n\t\t\tduration: 500,\n\t\t\tcircular: true,\n\t\t\tindicatorActiveColor: \"#fe7f00\",\n\t\t\tdisabled: false, // 按钮disabled\n\n\t\t\tswiper: [],\n\t\t\ttitle: \"服务\",\n\t\t\tid: \"\",\n\t\t\tproduct: \"\",\n\t\t\tnum: \"1\", // 剩余次数\n\n\t\t\tactiveDetail: \"\", // 活动详情\n\t\t\tactive: {}, // 活动内容\n\n\t\t\ttabIndex: 0, // 默认往期成交\n\t\t\tpastList: [], // 往期成交列表\n\t\t\tshowList: [], // 晒单列表\n\t\t\truleList: \"\", // 竞拍规则\n\t\t\tshow: false, // 显示弹窗\n\n\t\t\tlabel: [\"零风险\", \"正品承诺\", \"极速发货\", \"公平公正\"],\n\t\t\ttab: [\"往期成交\", \"分享晒单\", \"竞拍规则\"],\n\t\t\tsrc: \"/static/icon_experience.png\",\n\t\t\tleading: \"/static/icon/icon_leading.png\",\n\n\t\t\tActiveID: \"\",\n\t\t\tPrice: \"\",\n\t\t\tmsgID: \"\",\n\t\t\tmsgType: \"\",\n\t\t\ttimer: 0,\n\t\t\tbuttonsList: [], // 按钮类型，0表示报名按钮、1表示举牌按钮、2表示托管按钮、3表示填写地址按钮，4表示参与下一期按钮\n\t\t\tprice: \"\", // 最新价格\n\t\t\tallBills: \"\", // 全部举牌次数\n\t\t\tlastBills: [], // 出价列表\n\t\t\ttimerDurationTitle: \"\", // 状态对应要显示的标题\n\t\t\tonTimerStatus: \"\", // 活动通知\n\t\t\tOnTimerDowns: \"\", // 成交通知\n\n\t\t\tseq: \"\", // 更新我的剩余举牌次数\n\t\t\tMyBills: \"\", // 举牌响应消息（包含我的举牌次数、剩余可用次数）\n\t\t\tSeqBills: \"\", // 举牌响应消息（剩余可用次数）\n\t\t\tSignups: \"\", // 报名份数\n\t\t\tSeqSignups: \"\", // 剩下报名份数\n\t\t\tmySeqBills: \"\", // 我的出价记录\n\t\t\tUserID: \"\", // 登录成功，提示用户\n\t\t\ttapbtn: \"\", // 托管\n\t\t\tBillStat: \"\", // 总举牌次数\n\t\t\tnewPrice: \"\", // 领先价格\n\t\t\tnewBill: \"\", // 领先人全部信息\n\t\t\tnewNick: \"\", // 当前领先人\n\t\t\tnewFace: \"\", // 当前领先人头像\n\t\t\tnewCity: \"\", // 当前领先人所在城市\n\t\t\tlastbills: [], // 出局列表\n\t\t\ttimes: \"\", // 倒计时\n\t\t\tseqTime: new Date() // 初始Date时间\n\t\t};\n\t},\n\tonLoad(options: any) {\n\t\tconsole.log(\"options\", options);\n\t\tthis.id = options.id;\n\t\tthis.ActiveID = options.activeID;\n\t\tthis.websocket();\n\t},\n\tonShow() {\n\t\tthis.UserID = uni.getStorageSync(\"UserInfo\").ID;\n\t\tthis.getProduct();\n\t\tthis.getActiveByID();\n\t\tthis.getPastTransactionsList();\n\t\tthis.getOrderDryingList();\n\t},\n\tonUnload() {\n\t\tuni.closeSocket();\n\t},\n\tonPullDownRefresh() {\n\t\tthis.websocket();\n\t\tthis.getProduct();\n\t\tthis.getActiveByID();\n\t\tthis.getPastTransactionsList();\n\t\tthis.getOrderDryingList();\n\t},\n\tmethods: {\n\t\t// 获取产品详情\n\t\tgetProduct() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(ProductGet, data).then((res: any) => {\n\t\t\t\tconsole.log(\"Product\", res);\n\t\t\t\tthis.product = res.Product;\n\t\t\t\tthis.swiper = res.Product.ProductPicList;\n\t\t\t\tthis.Price = res.Product.ProductPrice;\n\t\t\t});\n\t\t},\n\t\t// 获取活动详情\n\t\tgetActiveByID() {\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet data = {\n\t\t\t\tActiveID: ActiveID\n\t\t\t};\n\t\t\trequest(GetActiveByID, data).then((res: any) => {\n\t\t\t\tconsole.log(\"活动详情\", res);\n\t\t\t\tthis.activeDetail = res.ActiveDetail;\n\t\t\t\tthis.active = res.ActiveDetail.Active;\n\t\t\t});\n\t\t},\n\t\t// 选项卡\n\t\ttabClick(index: number) {\n\t\t\tthis.tabIndex = index;\n\t\t},\n\t\t// 往期成交列表\n\t\tgetPastTransactionsList() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(PastTransactionsListGet, data).then((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tlet pastList = res.OrderList;\n\t\t\t\tpastList.map((item: any) => {\n\t\t\t\t\titem.percentage = (\n\t\t\t\t\t\t(item.OrderMoneys / item.OrderPrimeCost) *\n\t\t\t\t\t\t100\n\t\t\t\t\t).toFixed(2);\n\t\t\t\t});\n\t\t\t\tthis.pastList = pastList;\n\t\t\t});\n\t\t},\n\t\tchange(val: any) {\n\t\t\tconsole.log(val);\n\t\t\tthis.num = val;\n\t\t},\n\t\thidePopup() {\n\t\t\tthis.show = !this.show;\n\t\t},\n\t\ttolowerShow(e: any) {\n\t\t\tconsole.log('tolowerShow', e)\n\t\t},\n\t\t// 获取用户晒单列表\n\t\tgetOrderDryingList() {\n\t\t\tlet ProductID = this.id;\n\t\t\tlet data = {\n\t\t\t\tProductID: ProductID\n\t\t\t};\n\t\t\trequest(OrderDryingListGet, data).then((res: any) => {\n\t\t\t\tthis.showList = res.OrderList;\n\t\t\t});\n\t\t},\n\t\tactivePath() {\n\t\t\tlet id = this.id;\n\t\t\tnavigateTo(\"../activeBilList/activeBilList?id=\" + id);\n\t\t},\n\t\tproductDetailsUparsePath() {\n\t\t\tlet id = this.id;\n\t\t\tnavigateTo(\"../productDetailsUparse/productDetailsUparse?id=\" + id);\n\t\t},\n\t\twebsocket() {\n\t\t\tuni.connectSocket({\n\t\t\t\turl: \"wss://websocket.tengpaisc.com:8888/\"\n\t\t\t});\n\t\t\tuni.onSocketOpen((res: any) => {\n\t\t\t\tconsole.log(\"WebSocket连接已打开！\");\n\t\t\t\tsocketOpen = true;\n\t\t\t\tfor (let i = 0; i < socketMsgQueue.length; i++) {\n\t\t\t\t\tthis.sendSocketMessage(socketMsgQueue[i]);\n\t\t\t\t}\n\t\t\t\tsocketMsgQueue = [];\n\t\t\t\tthis.msgSubscribe();\n\t\t\t\tthis.reqLogin();\n\t\t\t});\n\t\t\tuni.onSocketError(res => {\n\t\t\t\tconsole.log(\"WebSocket连接打开失败，请检查！\");\n\t\t\t});\n\t\t\tthis.onSocketMessage();\n\t\t},\n\t\tsendSocketMessage(msg: any) {\n\t\t\tlet data: string = JSON.stringify(msg);\n\t\t\tconsole.log(\"发送数据\", socketOpen, msg);\n\t\t\tif (socketOpen) {\n\t\t\t\tuni.sendSocketMessage({\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocketMsgQueue.push(msg);\n\t\t\t}\n\t\t},\n\t\tonSocketMessage() {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tuni.onSocketMessage((res: any) => {\n\t\t\t\t\tconsole.log(\"收到服务器内容：\" + res.data);\n\t\t\t\t\tlet msg = JSON.parse(res.data);\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t\tthis.proccessMsg();\n\t\t\t\t\tsesolve(msg);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t// 向服务器发送登录请求\n\t\tasync reqLogin() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tconst Appkey = \"3957399\";\n\t\t\tconst SessionKey = uni.getStorageSync(\"SessionKey\");\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet UserID = this.UserID;\n\t\t\tlet ConnectionState = false;\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet reqLogin: any = {\n\t\t\t\tActiveID: ActiveID,\n\t\t\t\tAppKey: Appkey,\n\t\t\t\tSessionKey: SessionKey,\n\t\t\t\tmsgID: GUID,\n\t\t\t\tmsgType: 3,\n\t\t\t\tmsgTime: msgTime\n\t\t\t};\n\t\t\tthis.sendSocketMessage(reqLogin);\n\t\t},\n\t\t// 发送对该活动的消息订阅\n\t\tasync msgSubscribe() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet url = \"/Actives/\" + ActiveID + \"/\";\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet reqSubscribe = {\n\t\t\t\tSubscribe: url,\n\t\t\t\tmsgID: GUID,\n\t\t\t\tmsgType: 0,\n\t\t\t\tmsgTime: msgTime\n\t\t\t};\n\t\t\tthis.sendSocketMessage(reqSubscribe);\n\t\t},\n\t\t// 处理消息的函数，用于解析从服务器webSocket收到的各种消息\n\t\tasync proccessMsg() {\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet dt = new Date();\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tlet msg: any = await this.onSocketMessage();\n\t\t\tlet msgType = msg.msgType;\n\t\t\tthis.msgType = msgType;\n\t\t\tconsole.log(msgType);\n\t\t\ttry {\n\t\t\t\tswitch (msgType) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t// 订阅响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"订阅失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t// 报名响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"报名失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", true, true);\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 更新我的剩余举牌次数\n\t\t\t\t\t\tthis.seq = `剩余举牌次数：${msg.SeqBills}次，已报名份数：${msg.Signups}份，还可报名：${msg.SeqSignups}`;\n\t\t\t\t\t\tthis.SeqBills = msg.SeqBills;\n\t\t\t\t\t\tthis.Signups = msg.Signups;\n\t\t\t\t\t\tthis.SeqSignups = msg.SeqSignups;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t// 举牌响应消息（包含我的举牌次数、剩余可用次数）\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.MyBills = msg.MyBills;\n\t\t\t\t\t\t\tthis.SeqBills = msg.SeqBills;\n\t\t\t\t\t\t\tshowToast(msg.ErrMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t// 登录响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tshowToast(\"登录失败：\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 登录成功，提示用户\n\t\t\t\t\t\t\tthis.UserID = msg.UserID;\n\t\t\t\t\t\t\tlet initMsg = {\n\t\t\t\t\t\t\t\tActiveID: this.ActiveID,\n\t\t\t\t\t\t\t\tUserID: this.UserID,\n\t\t\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\t\t\tmsgType: 6,\n\t\t\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.sendSocketMessage(initMsg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\t// 托管响应\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t\tshowToast(\"托管失败!\" + msg.ErrMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"取消托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\t// 取消托管响应消息\n\t\t\t\t\t\tif (msg.IsError) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"取消托管\", \"2\", true, true);\n\t\t\t\t\t\t\tshowToast(\"取消托管失败!\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\t// 活动详情页初始化响应\n\t\t\t\t\t\tthis.timerDurationTitle = msg.TimerDurationTitle; // 状态对应要显示的标题\n\t\t\t\t\t\t// 倒计时显示文本\n\t\t\t\t\t\t// 判断是否需要倒计时，如果不需要则清除倒计时器\n\t\t\t\t\t\tif (msg.TimerDurationValue === 0) {\n\t\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet tm = dt.getTime() + msg.TimerDurationValue;\n\t\t\t\t\t\t\tthis.seqTime.setTime(tm);\n\t\t\t\t\t\t\tthis.timerState(this.seqTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 处理按钮的初始状态列表\n\t\t\t\t\t\tthis.buttonsList = msg.ButtonsList;\n\t\t\t\t\t\t// 更新最近出价人列表信息，更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\t\t\t\tthis.onPriceUpdateEvent(msg.Price, msg.AllBills, msg.LastBills);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\t// 报名进度更新推送\n\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tif (msg.AllSignups === msg.MaxSignups) {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t\t// 已满员，隐藏掉报名按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\t// 还需要继续报名，显示报名按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"3\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\t// 价格更新通知\n\t\t\t\t\t\tshowToast(\"价格已更新......！\");\n\t\t\t\t\t\t// 更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\t\t\t\tthis.BillStat = \"总举牌次数：\" + msg.AllBills + \"次\";\n\t\t\t\t\t\t// 更新最后出价人信息\n\t\t\t\t\t\tif (msg.Bills.length > 0) {\n\t\t\t\t\t\t\tthis.newPrice = `￥${msg.Bills[0].Price}`;\n\t\t\t\t\t\t\tthis.newBill = msg.Bills[0].bill;\n\t\t\t\t\t\t\tthis.newFace = msg.Bills[0].bill.face;\n\t\t\t\t\t\t\tthis.newNick = `领先人：${msg.Bills[0].nick}`;\n\t\t\t\t\t\t\t// 计算剩余时长\n\t\t\t\t\t\t\tlet dt = new Date();\n\t\t\t\t\t\t\tlet tm = dt.getTime() + msg.SeqMiniSecounds;\n\t\t\t\t\t\t\tthis.seqTime.setTime(tm);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 更新最近出局人信息\n\t\t\t\t\t\tif (msg.Bills.length > 1) {\n\t\t\t\t\t\t\tthis.lastbills = msg.Bills;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 判断是否需要启动计时器，如果只有一个出价，肯定就是需要启动的，因为计时器未启动\n\t\t\t\t\t\tif (msg.Bills.length === 1) {\n\t\t\t\t\t\t\tthis.timerState(this.seqTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\t//计算剩余时间，并重置剩余时间\n\t\t\t\t\t\tlet dt_time = dt.getTime();\n\t\t\t\t\t\tthis.seqTime.setTime(dt_time + msg.SeqMiniSecounds);\n\t\t\t\t\t\tconsole.log(this.seqTime);\n\t\t\t\t\t\t// 设置倒计时标题为即将开拍\n\t\t\t\t\t\tthis.timerDurationTitle = \"开拍准备\";\n\t\t\t\t\t\t// 隐藏掉报名按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t// 禁用举牌、托管按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"1\", true, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"自动举牌中\", \"2\", true, false);\n\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\t// 活动正式开始，但是目前尚未有人出价，所以收到此消息，先停止计时器，并显示为 “等待先手”\n\t\t\t\t\t\tthis.times = \"等待首牌\";\n\t\t\t\t\t\t// 清除计时器\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\t// 设置价格\n\t\t\t\t\t\tthis.newPrice = \"￥\" + msg.currPrice;\n\t\t\t\t\t\t// 判断活动类型，如果是人工举牌，显示托管、举牌；如果是自动举牌，举牌按钮更改为“自动举牌中”，其它按钮全部隐藏\n\t\t\t\t\t\tif (msg.ActiveType === 0) {\n\t\t\t\t\t\t\t// 停用其它按钮，仅剩下举牌按钮，且举牌按钮状态显示为自动举牌中\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"自动举牌中\", \"1\", true, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 启用举牌、托管按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", true, true);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 隐藏掉报名、填写地址、参与下一期按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\t// 活动结束通知\n\t\t\t\t\t\tthis.timerState(null);\n\t\t\t\t\t\tthis.times = \"已成交\";\n\t\t\t\t\t\t// 判断是否当前用户，如果是当前用户，则需要弹出收货地址和订单信息处理界面\n\t\t\t\t\t\tif (this.UserID === msg.WinsBill.UserID) {\n\t\t\t\t\t\t\t// 当前用户\n\t\t\t\t\t\t\tshowToast(\"恭喜，您已中拍！点击确定去填写订单信息吧！\");\n\t\t\t\t\t\t\t// 隐藏其它按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", false, false);\n\t\t\t\t\t\t\t// 触发填写地址按钮的显示，其它按钮隐藏\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", true, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 隐藏掉其它按钮\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\t\t// 触发下一期按钮的显示，其它按钮隐藏\n\t\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", true, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\t// 活动流拍通知\n\t\t\t\t\t\tthis.onTimerStatus = \"活动流拍\";\n\t\t\t\t\t\tthis.OnTimerDowns = \"-\";\n\t\t\t\t\t\t// 隐藏掉其它按钮\n\t\t\t\t\t\tthis.buttonStateChanged(\"报名\", \"0\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"举牌\", \"1\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"托管\", \"2\", false, false);\n\t\t\t\t\t\tthis.buttonStateChanged(\"填写收货地址\", \"3\", false, false);\n\t\t\t\t\t\t// 触发下一期按钮的显示，其它按钮隐藏\n\t\t\t\t\t\tthis.buttonStateChanged(\"参与下一期\", \"4\", true, true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\"处理消息出错：\");\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t},\n\n\t\t// 定义按钮处理函数\n\t\tbuttonStateChanged(text: any, type: any, isDisplay: any, isEnabled: any) {\n\t\t\tthis.buttonsList.map((item: any, i: any, value: any) => {\n\t\t\t\tvalue[type].ButtonText = text;\n\t\t\t\tvalue[type].ButtonVisibility = isDisplay;\n\t\t\t\tvalue[type].ButtonEnabled = isEnabled;\n\t\t\t});\n\t\t},\n\n\t\t// 更新价格事件\n\t\tonPriceUpdateEvent(startPrice: any, allBills: any, lastBills: any) {\n\t\t\t// 更新全部举牌次数、我的举牌次数、和最新价格\n\t\t\tthis.allBills = allBills; // '活动总举牌次数：' + allBills + '次'\n\t\t\tif (lastBills.length > 0) {\n\t\t\t\t// 有人出价，按最后出价人\n\t\t\t\tthis.newPrice = `￥${lastBills[0].bill.Price}`;\n\t\t\t\tthis.newBill = lastBills[0].bill;\n\t\t\t\tthis.newFace = lastBills[0].face;\n\t\t\t\tthis.newNick = `领先人：${lastBills[0].nick}`;\n\t\t\t\tthis.newCity = `${lastBills[0].bill.Province} ${lastBills[0].bill.City}`;\n\t\t\t} else {\n\t\t\t\t// 未有人出价，按起拍价\n\t\t\t\tthis.newPrice = `￥${startPrice}`;\n\t\t\t}\n\t\t\t// 更新最近出局人信息\n\t\t\tif (lastBills.length > 1) {\n\t\t\t\tthis.lastBills = lastBills;\n\t\t\t}\n\t\t},\n\t\tasync billTap(type: any) {\n\t\t\tlet action = type;\n\t\t\tlet ActiveID = this.ActiveID;\n\t\t\tlet num = this.num;\n\t\t\tlet Price = this.Price;\n\t\t\tlet GUID: any = await this.GUID();\n\t\t\tlet msgTime = formatTime(new Date());\n\t\t\tconsole.log(\"switch\", type);\n\t\t\tswitch (action) {\n\t\t\t\tcase \"报名\":\n\t\t\t\t\tlet SignupMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tShares: num,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 1,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(SignupMsg);\n\t\t\t\t\tthis.show = !this.show;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"举牌\":\n\t\t\t\t\tlet billMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tPrice: Price,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 2,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(billMsg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"托管\":\n\t\t\t\t\tlet tapMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 4,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(tapMsg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"取消托管\":\n\t\t\t\t\tlet cancelTapMsg = {\n\t\t\t\t\t\tActiveID: ActiveID,\n\t\t\t\t\t\tmsgID: GUID,\n\t\t\t\t\t\tmsgType: 5,\n\t\t\t\t\t\tmsgTime: msgTime\n\t\t\t\t\t};\n\t\t\t\t\tthis.sendSocketMessage(cancelTapMsg);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t// 下面处理倒计时的显示，实际上时间是由服务器webSocket返回的\n\t\tseqDisplay() {\n\t\t\tlet seqTime: any = this.seqTime;\n\t\t\tlet date: any = new Date();\n\t\t\tlet between: number = seqTime - date;\n\t\t\tlet sec: number = Math.floor(between / 1000);\n\t\t\tlet hours: any = Math.floor(Math.floor(sec / 60) / 60) % 24;\n\t\t\tlet days = Math.floor(Math.floor(Math.floor(sec / 60) / 60) / 24) % 30;\n\t\t\tlet minutes: any = Math.floor(sec / 60) % 60;\n\t\t\tlet seconds: any = sec % 60;\n\t\t\tlet minisec: number = Math.floor(between / 100) % 10;\n\t\t\tif (seconds <= 0) {\n\t\t\t\tthis.times = \"\";\n\t\t\t} else {\n\t\t\t\tif (hours < 10) {\n\t\t\t\t\thours = \"0\" + hours;\n\t\t\t\t}\n\t\t\t\tif (minutes < 10) {\n\t\t\t\t\tminutes = \"0\" + minutes;\n\t\t\t\t}\n\t\t\t\tif (seconds < 10) {\n\t\t\t\t\tseconds = \"0\" + seconds;\n\t\t\t\t}\n\t\t\t\tlet times =\n\t\t\t\t\t(days > 0 ? days + \"天\" : \"\") +\n\t\t\t\t\thours +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tminutes +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tseconds +\n\t\t\t\t\t\".\" +\n\t\t\t\t\tminisec;\n\t\t\t\tthis.times = times;\n\t\t\t}\n\t\t},\n\t\t// 倒计时\n\t\ttimerState(type: any) {\n\t\t\tif (type === null) {\n\t\t\t\tclearInterval(this.timer);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(type instanceof Date)) {\n\t\t\t\tconsole.error(\"传入日期时间格式不正确！\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (type.getTime() < new Date().getTime()) {\n\t\t\t\t// 时间错误，时间必须是未来的日期时间\n\t\t\t\tconsole.error(\"设置倒计时器无效，日期时间必须是未来的时间！\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// 清除旧的倒计时器\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = setInterval(() => {\n\t\t\t\tthis.seqDisplay();\n\t\t\t}, 100);\n\t\t},\n\t\t// 下面是生成随机GUID的函数\n\t\tGUID() {\n\t\t\treturn new Promise((sesolve, reject) => {\n\t\t\t\tlet guid = \"\";\n\t\t\t\tfor (let i = 1; i <= 32; i++) {\n\t\t\t\t\tlet n = Math.floor(Math.random() * 16.0).toString(16);\n\t\t\t\t\tguid += n;\n\t\t\t\t\tif (i == 8 || i == 12 || i == 16 || i == 20) guid += \"-\";\n\t\t\t\t}\n\t\t\t\tsesolve(guid);\n\t\t\t});\n\t\t}\n\t}\n});\n</script>\n\n<style scoped>\n.kong {\n\theight: 98upx;\n}\n\n.i-label {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tcolor: #b25a01;\n\tbackground-color: rgba(254, 127, 0, 0.3);\n\theight: 70upx;\n}\n\n.i-point {\n\twidth: 10upx;\n\theight: 10upx;\n\tbackground-color: rgba(254, 127, 0, 0.2);\n\tborder-radius: 50%;\n}\n\n.i-label-item {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.i-label-item-text {\n\tmargin: 0 10upx;\n}\n\n.i-product-head {\n\tpadding: 20upx 30upx;\n}\n\n.i-product-title {\n\tfont-size: 32upx;\n\tcolor: #4d4d4d;\n\tline-height: 1.2;\n\tfont-weight: 600;\n}\n\n.i-product-current-bid {\n\tmargin: 0 30upx;\n\ttext-align: center;\n}\n\n.i-product-current-bid-head {\n\tfont-size: 30upx;\n\tfont-weight: 500;\n\tcolor: #414141;\n}\n\n.i-product-current-bid-price {\n\tfont-size: 56upx;\n\tfont-weight: 600;\n\tcolor: #414141;\n}\n\n.i-product-current-bid-icon {\n\tposition: relative;\n}\n\n.i-product-current-bid-icon img {\n\twidth: 100%;\n\theight: 140upx;\n}\n\n.i-product-current-bid-icon text {\n\tposition: absolute;\n\ttop: 18upx;\n\tleft: 0;\n\tright: 0;\n\tfont-size: 36upx;\n\tfont-weight: 600;\n\tcolor: #fffefe;\n}\n\n.i-product-current-bid-user img {\n\twidth: 120upx;\n\theight: 120upx;\n\tborder-radius: 50%;\n}\n\n.i-product-current-bid-name {\n\tfont-size: 30upx;\n\tfont-weight: 600;\n\tcolor: #fe7f00;\n}\n\n.i-product-current-bid-address {\n\tfont-size: 28upx;\n\tfont-weight: 600;\n\tcolor: #848484;\n}\n\n.i-product-last-transaction {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin: 0 30upx;\n}\n\n.i-product-status {\n\tfont-size: 28upx;\n\ttext-align: center;\n\tcolor: #fe7f00;\n\tborder-radius: 100upx;\n\tborder: 2upx solid #fe7f00;\n\tpadding: 0 30upx;\n}\n\n.i-product-last-transaction-content {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-left: 35upx;\n}\n\n.i-product-last-transaction-text {\n\tfont-size: 28upx;\n\tcolor: #000000;\n}\n\n.i-product-last-transaction-price {\n\tfont-size: 36upx;\n\tcolor: #fe7f00;\n\tfont-weight: 600;\n}\n\n.i-product-distance-shooting {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tmargin: 10upx 30upx;\n\tpadding: 0 30upx;\n\tborder: 2upx solid #fe7f00;\n\tborder-radius: 100upx;\n\ttext-align: center;\n}\n\n.i-product-distance-shooting-text {\n\tfont-size: 30upx;\n\tcolor: #4d4d4d;\n\tpadding: 0 20upx;\n}\n\n.i-product-line {\n\twidth: 2upx;\n\theight: 60upx;\n\tbackground-color: #717171;\n}\n\n.i-product-distance-shooting-time {\n\tfont-size: 58upx;\n\tline-height: 88upx;\n\tfont-weight: 600;\n\tcolor: #fe7f00;\n}\n\n.i-product-distance-shooting-end {\n\ttext-align: center;\n\tmargin: 10upx 30upx;\n\tpadding: 0 30upx;\n\tborder: 2upx solid #717171;\n\tborder-radius: 100upx;\n}\n\n.i-product-distance-shooting-time-end {\n\tfont-size: 58upx;\n\tline-height: 88upx;\n\tfont-weight: 600;\n\tcolor: #010101;\n}\n\n.i-product-table {\n\tdisplay: table;\n\twidth: calc(100% - 60upx);\n\tborder-collapse: collapse;\n\tbox-sizing: border-box;\n\tmargin: 30upx 30upx;\n}\n\n.i-product-tab {\n\tborder-top: 2upx solid #f4f4f4;\n\tborder-bottom: 2upx solid #f4f4f4;\n}\n\n.i-product-tab-item {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\theight: 100upx;\n}\n\n.i-product-button-list {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground-color: #fff;\n\tborder-top: 2upx solid #f4f4f4;\n}\n\n.i-active {\n\tcolor: #fe7f00;\n}\n\n.i-product-join {\n\tposition: fixed;\n\tbottom: 0;\n\twidth: 100%;\n\tz-index: 10;\n\tmargin: 0;\n}\n\n.join-btn {\n\twidth: 100%;\n\tcolor: #fff;\n\tbackground-image: linear-gradient(-225deg, #fe7f00 35%, #fe7c13);\n}\n\n.i-product-placard {\n\tposition: fixed;\n\tbottom: 0;\n\theight: 90upx;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.i-placard-remaining-num {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-left: 30upx;\n}\n\n.i-placard-remaining {\n\tfont-size: 28upx;\n\tcolor: #5c5c5c;\n}\n\n.i-placard-num {\n\tfont-size: 48upx;\n\tcolor: #fe7c13;\n\tfont-weight: 600;\n}\n\n.i-bill {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 120upx;\n\tfont-size: 32upx;\n\tline-height: 120upx;\n\tborder-bottom: 2upx solid #f4f4f4;\n\tpadding: 0 30upx;\n}\n\n.i-bill-out {\n\tcolor: #30a900;\n}\n\n.i-bill-pre {\n\tcolor: #fe7f00;\n}\n\n.i-active {\n\tcolor: #fe7f00;\n}\n\n.i-bill-image {\n\tmin-width: 260upx;\n}\n\n.i-bill-image image {\n\twidth: 84upx;\n\theight: 84upx;\n}\n\n.i-bill-user {\n\tmargin-left: 20upx;\n}\n\n.i-product-all-bill {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n.i-product-all-bill-text {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n}\n\n.i-product-all-bill-records {\n\tfont-size: 28upx;\n\tcolor: #474747;\n}\n\n.i-product-all-bill-length {\n\tfont-size: 28upx;\n}\n\n.i-product-all-bill-text-item {\n\tcolor: #fe7f00;\n\tmargin-left: 20upx;\n\tmargin-right: 10upx;\n}\n\n.i-product-placad {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground-color: #fff;\n\twidth: 100%;\n}\n\n.i-placard-button {\n\tmin-width: 200upx;\n\theight: 90upx;\n\tfont-size: 30upx;\n}\n\n.i-placard-button button {\n\tcolor: #fe7c13;\n\tbackground-color: #fff;\n\tborder-left: 2upx solid #f4f4f4;\n}\n\n.i-placard-active button {\n\tcolor: #fff;\n\tbackground-color: #fe7c13;\n\tborder-left: 2upx solid #f4f4f4;\n}\n\n.btn {\n\tfont-size: 32upx;\n\theight: 106upx;\n\tline-height: 98upx;\n\tborder: none;\n\tborder-radius: 0;\n}\n\n.btn:after {\n\tborder: none;\n\tborder-radius: 0;\n}\n</style>\n"]}]}