{"remainingRequest":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lee/Desktop/github/mall-project/src/components/gaoyia-parse/components/wxParseTable.vue?vue&type=style&index=0&id=968ba810&scoped=true&lang=css&","dependencies":[{"path":"/Users/lee/Desktop/github/mall-project/src/components/gaoyia-parse/components/wxParseTable.vue","mtime":1568125935175},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":1563798331564},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/css-loader/index.js","mtime":1554990705185},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1563798333387},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/postcss-loader/src/index.js","mtime":1554990705524},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/cache-loader/dist/cjs.js","mtime":1554990705312},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/vue-loader/lib/index.js","mtime":1563798333387},{"path":"/Users/lee/Desktop/github/mall-project/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":1563798331564}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url(\"../parse.css\");\n",{"version":3,"sources":["wxParseTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA","file":"wxParseTable.vue","sourceRoot":"src/components/gaoyia-parse/components","sourcesContent":["<template>\n\t<rich-text :nodes=\"nodes\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\"></rich-text>\n</template>\n<script>\nexport default {\n\tname: 'wxParseTable',\n\tprops: {\n\t\tnode: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t},\n\tinject: ['parseSelect'],\n\tdata() {\n\t\treturn {\n\t\t\tnodes:[]\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.nodes=this.loadNode([this.node]);\n\t},\n\tmethods: {\n\t\tloadNode(node) {\n\t\t\tlet obj = [];\n\t\t\tfor (let children of node) {\n\t\t\t\t// console.log(children)\n\t\t\t\tif (children.node=='element') {\n\t\t\t\t\tlet t = {\n\t\t\t\t\t\tname:children.tag,\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclass: children.classStr,\n\t\t\t\t\t\t\t// style: children.styleStr,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchildren: children.nodes?this.loadNode(children.nodes):[]\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.push(t)\n\t\t\t\t} else if(children.node=='text'){\n\t\t\t\t\tobj.push({\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: children.text\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj\n\t\t}\n\t}\n};\n</script>\n<style scoped>\n\t@import url(\"../parse.css\");\n</style>"]}]}